{
  "$schema": "",
  "framework": "vue",
  "name": "quasar",
  "version": "1.4.4",
  "contributions": {
    "html": {
      "types-syntax": "typescript",
      "tags": [
        {
          "name": "QAjaxBar",
          "source": {
            "module": "quasar",
            "symbol": "QAjaxBar"
          },
          "attributes": [
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "'top'|'right'|'bottom'|'left'"
              },
              "description": "Position within window of where QAjaxBar should be displayed\n\nExamples:\nbottom",
              "doc-url": "https://quasar.dev",
              "default": "\"top\""
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev",
              "default": "\"2px\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "skip-hijack",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Skip Ajax hijacking (not a reactive prop)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "reverse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Reverse direction of progress",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "start",
              "description": "Emitted when bar is triggered to appear",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stop",
              "description": "Emitted when bar has finished its job",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QAjaxBar - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QAvatar",
          "source": {
            "module": "quasar",
            "symbol": "QAvatar"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "font-size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The size in CSS units, including unit name, of the content (icon, text)\n\nExamples:\n18px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Optional; Suggestions: one character string, <img> tag",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QAvatar - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBadge",
          "source": {
            "module": "quasar",
            "symbol": "QBadge"
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "floating",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Tell QBadge if it should float to the top right side of the relative positioned parent element or not",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "transparent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 0.8 opacity; Useful especially for floating QBadge",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "multi-line",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Content can wrap to multiple lines",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Badge's content as string; overrides default slot if specified\n\nExamples:\nJohn Doe\n22",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'top'|'middle'|'bottom'"
              },
              "description": "Sets vertical-align CSS prop",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where QBadge content goes, if not using 'label' property",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBadge - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBanner",
          "source": {
            "module": "quasar",
            "symbol": "QBanner"
          },
          "attributes": [
            {
              "name": "inline-actions",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display actions on same row as content",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where Banner content goes",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "avatar",
              "description": "Slot for displaying an avatar (suggestions: QIcon, QAvatar)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "action",
              "description": "Slot for Banner action (suggestions: QBtn)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBanner - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBar",
          "source": {
            "module": "quasar",
            "symbol": "QBar"
          },
          "attributes": [
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "The component background color lights up the parent's background (as opposed to default behavior which is to darken it); Works unless you specify a CSS background color for it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBar - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBreadcrumbs",
          "source": {
            "module": "quasar",
            "symbol": "QBreadcrumbs"
          },
          "attributes": [
            {
              "name": "separator",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The string used to separate the breadcrumbs\n\nExamples:\n-\n|\n>",
              "doc-url": "https://quasar.dev",
              "default": "\"/\""
            },
            {
              "name": "active-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The color of the active breadcrumb, which can be any color from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev",
              "default": "\"primary\""
            },
            {
              "name": "gutter",
              "value": {
                "kind": "expression",
                "type": "'none'|'xs'|'sm'|'md'|'lg'|'xl'"
              },
              "description": "The gutter value allows you control over the space between the breadcrumb elements.\n\nExamples:\nmd\nlg",
              "doc-url": "https://quasar.dev",
              "default": "\"sm\""
            },
            {
              "name": "separator-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The color used to color the separator, which can be any color from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'left'|'center'|'right'|'between'|'around'|'evenly'"
              },
              "description": "Specify how to align the breadcrumbs horizontally\n\nExamples:\nleft\ncenter",
              "doc-url": "https://quasar.dev",
              "default": "\"left\""
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "separator",
              "vue-properties": [],
              "description": "HTML or component you can slot in to separate the breadcrumbs",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBreadcrumbs - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBreadcrumbsEl",
          "source": {
            "module": "quasar",
            "symbol": "QBreadcrumbsEl"
          },
          "attributes": [
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'exact' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "append",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'append' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact-active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-exact-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The label text for the breadcrumb\n\nExamples:\nHome\nIndex",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where custom content goes, unless 'icon' and 'label' props are not enough",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBreadcrumbsEl - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBtnDropdown",
          "source": {
            "module": "quasar",
            "symbol": "QBtnDropdown"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Controls Menu show/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"menuState\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'a'|'submit'|'button'|'reset'"
              },
              "description": "Define the button HTML DOM type\n\nExamples:\ntype=\"a\" href=\"http://some-site.net\" target=\"__blank\"",
              "doc-url": "https://quasar.dev",
              "default": "\"button\""
            },
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "The text that will be shown on the button\n\nExamples:\nButton Label",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon-right",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unelevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove shadow",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a more prominent border-radius for a squared shape button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a glossy effect",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fab",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes button size and shape to fit a Floating Action Button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fab-mini",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes button size and shape to fit a small Floating Action Button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid turning label text into caps (which happens by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-wrap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid label text wrapping",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'left'|'right'|'center'|'around'|'between'|'evenly'"
              },
              "description": "Label or content alignment",
              "doc-url": "https://quasar.dev",
              "default": "\"center\""
            },
            {
              "name": "stack",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Stack icon and label vertically instead of on same line (like it is by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stretch",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used on flexbox parent, button will stretch to parent's height",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put button into loading state (displays a QSpinner -- can be overridden by using a 'loading' slot)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "split",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Split dropdown icon into its own button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dropdown-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable-main-btn",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disable main button (useful along with 'split' prop)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable-dropdown",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disables dropdown (dropdown button if using along 'split' prop)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the menu\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the menu\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "cover",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to cover the button. When used, the 'menu-self' and 'menu-fit' props are no longer effective",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to not be dismissed by a click/tap outside of the menu or by hitting the ESC key",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "auto-close",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows any click/tap in the menu to close it; Useful instead of attaching events to each menu item that should close the menu on click/tap",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "menu-anchor",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom center'|'bottom right'"
              },
              "description": "Two values setting the starting position or anchor point of the menu relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "menu-self",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom center'|'bottom right'"
              },
              "description": "Two values setting the menu's own position relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "click",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user clicks/taps on the main button (not the icon one, if using 'split')",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "description": "Customize main button's content through this slot, unless you're using the 'icon' and 'label' props",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBtnDropdown - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QBtnGroup",
          "source": {
            "module": "quasar",
            "symbol": "QBtnGroup"
          },
          "attributes": [
            {
              "name": "spread",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Spread horizontally to all available space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design for buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design for buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unelevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove shadow on buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a more prominent border-radius for squared shape buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design for buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stretch",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used on flexbox parent, buttons will stretch to parent's height",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a glossy effect",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QBtn",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBtnGroup - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QBtnToggle",
          "source": {
            "module": "quasar",
            "symbol": "QBtnToggle"
          },
          "attributes": [
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"selected\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of Objects defining each option\n\nExamples:\n[ {label: 'One', value: 'one'}, {label: 'Two', value: 'two'} ]",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "toggle-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev",
              "default": "\"primary\""
            },
            {
              "name": "toggle-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "spread",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Spread horizontally to all available space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unelevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove shadow",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a more prominent border-radius for a squared shape button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a glossy effect",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Button size name or a CSS unit including unit name\n\nExamples:\nxs\nsm\nmd\nlg\nxl\n25px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid turning label text into caps (which happens by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-wrap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid label text wrapping",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stack",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Stack icon and label vertically instead of on same line (like it is by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stretch",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used on flexbox parent, button will stretch to parent's height",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clearable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Clears model on click of the already selected button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "clear",
              "description": "When using the 'clearable' property, this event is emitted when the already selected button is clicked",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QBtnToggle - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QBtn",
          "source": {
            "module": "quasar",
            "symbol": "QBtn"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'a'|'submit'|'button'|'reset'"
              },
              "description": "Define the button HTML DOM type\n\nExamples:\ntype=\"a\" href=\"http://some-site.net\" target=\"__blank\"",
              "doc-url": "https://quasar.dev",
              "default": "\"button\""
            },
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "The text that will be shown on the button\n\nExamples:\nButton Label",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon-right",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unelevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove shadow",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a more prominent border-radius for a squared shape button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a glossy effect",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fab",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes button size and shape to fit a Floating Action Button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fab-mini",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes button size and shape to fit a small Floating Action Button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid turning label text into caps (which happens by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-wrap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid label text wrapping",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'left'|'right'|'center'|'around'|'between'|'evenly'"
              },
              "description": "Label or content alignment",
              "doc-url": "https://quasar.dev",
              "default": "\"center\""
            },
            {
              "name": "stack",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Stack icon and label vertically instead of on same line (like it is by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stretch",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used on flexbox parent, button will stretch to parent's height",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put button into loading state (displays a QSpinner -- can be overridden by using a 'loading' slot)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "round",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes a circle shaped button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "percentage",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Percentage (0.0 < x < 100.0); To be used along 'loading' prop; Display a progress bar on the background\n\nExamples:\n23",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark-percentage",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Progress bar on the background should have dark color; To be used along with 'percentage' and 'loading' props",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Use for custom content, instead of relying on 'icon' and 'label' props",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "Override the default QSpinner when in 'loading' state",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QBtn - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCard",
          "source": {
            "module": "quasar",
            "symbol": "QCard"
          },
          "attributes": [
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCard - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCardActions",
          "source": {
            "module": "quasar",
            "symbol": "QCardActions"
          },
          "attributes": [
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'left'|'center'|'right'|'between'|'around'|'evenly'|'stretch'"
              },
              "description": "Specify how to align the actions",
              "doc-url": "https://quasar.dev",
              "default": "\"left (for horizontal mode) / stretch (for vertical mode)\""
            },
            {
              "name": "vertical",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display actions one below the other",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestions: QBtn",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCardActions - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCardSection",
          "source": {
            "module": "quasar",
            "symbol": "QCardSection"
          },
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCardSection - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCarousel",
          "source": {
            "module": "quasar",
            "symbol": "QCarousel"
          },
          "attributes": [
            {
              "name": "fullscreen",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Fullscreen mode\n\nExamples:\n:fullscreen.sync=\"isFullscreen\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-route-fullscreen-exit",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Changing route app won't exit fullscreen",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component defining current panel's name; If used as Number, it does not defines panel index though but slide name's which may be an Integer; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"panelName\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-alive",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to using Vue's native <keep-alive> component on the content",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "animated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable transitions between panel (also see 'transition-prev' and 'transition-next' props)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "infinite",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes component appear as infinite (when reaching last panel, next one will become the first one)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "swipeable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable swipe events (may interfere with content's touch/mouse events)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "transition-prev",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "transition-next",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Height of Carousel in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "padding",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default padding to each slide, according to the usage of 'arrows' and 'navigation' props",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "control-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "autoplay",
              "value": {
                "kind": "expression",
                "type": "number|boolean"
              },
              "description": "Jump to next slide at fixed time intervals (in milliseconds); 'false' disables autoplay, 'true' enables it for 5000ms intervals\n\nExamples:\n:autoplay=\"2500\"\ntrue\nfalse",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "arrows",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show navigation arrow buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "prev-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "next-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "navigation",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show navigation dots",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "navigation-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "thumbnails",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show thumbnails",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string|number",
                  "description": "New current panel name\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component changes the model; This event _isn't_ fired if the model is changed externally; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition is going\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition is happening\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted before transitioning to a new panel",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition has occurred\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition has happened\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component transitioned to a new panel",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QCarouselSlide",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "control",
              "description": "Slot specific for QCarouselControl",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCarousel - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QCarouselControl",
          "source": {
            "module": "quasar",
            "symbol": "QCarouselControl"
          },
          "attributes": [
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "'top-right'|'top-left'|'bottom-right'|'bottom-left'|'top'|'right'|'bottom'|'left'"
              },
              "description": "Side/corner to stick to\n\nExamples:\ntop-right",
              "doc-url": "https://quasar.dev",
              "default": "\"bottom-right\""
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the component horizontally and vertically (in pixels)\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev",
              "default": "\"[18, 18]\""
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCarouselControl - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCarouselSlide",
          "source": {
            "module": "quasar",
            "symbol": "QCarouselSlide"
          },
          "attributes": [
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Slide name\n\nExamples:\naccounts\nfirstPanel\n:name=\"1\"\naccounts\nfirstSlide\n:name=\"1\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "img-src",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "URL pointing to a slide background image (use statics folder)\n\nExamples:\nstatics/my-background.png\nhttps://placeimg.com/500/300/nature",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCarouselSlide - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QChatMessage",
          "source": {
            "module": "quasar",
            "symbol": "QChatMessage"
          },
          "attributes": [
            {
              "name": "sent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Render as a sent message (so from current user)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Renders a label header/section only\n\nExamples:\nFriday, 18th",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bg-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name (from the Quasar Color Palette) for chat bubble background\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name (from the Quasar Color Palette) for chat bubble text\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Author's name\n\nExamples:\nJohn Doe",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "avatar",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "URL to the avatar image of the author; Suggestion: use a static resource\n\nExamples:\nstatics/boy-avatar.png\nstatics/linux-avatar.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of strings that are the message body. Strings are not sanitized (see details in docs)\n\nExamples:\n:text=\"['How are you?']\"\n:text=\"['I\\'m good, thank you!', 'And you?']\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stamp",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Creation timestamp\n\nExamples:\n13:55\nYesterday at 13:51",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "1-12 out of 12 (same as col-*)\n\nExamples:\n4\n6\n12",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render label; Use it when the label might be unsafe (from user input)",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            },
            {
              "name": "name-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render name; Use it when the name might be unsafe (from user input)",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            },
            {
              "name": "text-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render text; Use it when the text might be unsafe (from user input)",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            },
            {
              "name": "stamp-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render stamp; Use it when the stamp might be unsafe (from user input)",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "You can use this slot to define a custom message (overrides props)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "avatar",
              "description": "Slot for avatar; Suggestion: QAvatar, img",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QChatMessage - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QCheckbox",
          "source": {
            "module": "quasar",
            "symbol": "QCheckbox"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any|any[]"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nfalse\n['car', 'building']",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "val",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Works when model ('value') is Array. It tells the component which value should add/remove when ticked/unticked\n\nExamples:\ncar",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "true-value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "What model value should be considered as checked/ticked/on?\n\nExamples:\nAgreed",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "false-value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "What model value should be considered as unchecked/unticked/off?\n\nExamples:\nDisagree",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Label to display along the component (or use the default slot instead of this prop)\n\nExamples:\nI agree with the Terms and Conditions",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label (if any specified) should be displayed on the left side of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-color",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Should the color (if specified any) be kept when the component is unticked/ off?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "indeterminate-value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "What model value should be considered as 'indeterminate'?\n\nExamples:\n0\nnot_answered",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "toggle-indeterminate",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When user clicks/taps on the component, should we toggle through the indeterminate state too?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot can be used as label, unless 'label' prop is specified; Suggestion: string",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCheckbox - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QChip",
          "source": {
            "module": "quasar",
            "symbol": "QChip"
          },
          "attributes": [
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "QChip size name or a CSS unit including unit name\n\nExamples:\nxs\nsm\nmd\nlg\nxl\n25px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon-right",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Chip's content as string; overrides default slot if specified\n\nExamples:\nJohn Doe\nBook",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component determining if QChip should be rendered or not",
              "doc-url": "https://quasar.dev",
              "default": "true",
              "type": "boolean"
            },
            {
              "name": "selected",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model for QChip if it's selected or not",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Sets a low value for border-radius instead of the default one, making it close to a square",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display using the 'outline' design",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clickable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Is QChip clickable? If it's the case, then it will add hover effects and emit 'click' events",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "removable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "If set, then it displays a 'remove' icon that when clicked the QChip emits 'remove' event",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "click",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted on QChip click if 'clickable' property is set",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "update:selected",
              "arguments": [
                {
                  "name": "state",
                  "type": "boolean",
                  "description": "Selected state",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Used by Vue on 'selected.sync' prop for updating its value",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "remove",
              "arguments": [
                {
                  "name": "state",
                  "type": "boolean",
                  "description": "Render state (render or not)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Works along with 'value' and 'removable' prop. Emitted when toggling rendering state of the QChip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where QChip content goes, if not using 'label' property",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QChip - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QCircularProgress",
          "source": {
            "module": "quasar",
            "symbol": "QCircularProgress"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Current progress (must be between min/max)\n\nExamples:\n0\n100\n52.32",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "min",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Minimum value defining 'no progress' (must be lower than 'max')\n\nExamples:\n0\n100\n52.32",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum value defining 100% progress made (must be higher than 'min')\n\nExamples:\n100\n52.32",
              "doc-url": "https://quasar.dev",
              "default": "100"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for the arc progress from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "center-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for the center part of the component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "track-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for the track of the component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "font-size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size of text in CSS units, including unit name. Suggestion: use 'em' units to sync with component size\n\nExamples:\n1em\n16px\n2rem",
              "doc-url": "https://quasar.dev",
              "default": "\"0.25em\""
            },
            {
              "name": "thickness",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Thickness of progress arc as a ratio (0.0 < x < 1.0) of component size\n\nExamples:\n1\n0.3",
              "doc-url": "https://quasar.dev",
              "default": "0.2"
            },
            {
              "name": "angle",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Angle to rotate progress arc by\n\nExamples:\n0\n40\n90",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "indeterminate",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component into 'indeterminate' state; Ignores 'value' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "show-value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enables the default slot and uses it (if available), otherwise it displays the 'value' prop as text; Make sure the text has enough space to be displayed inside the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "reverse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Reverses the direction of progress; Only for determined state",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Used for component content only if 'show-value' prop is set; Make sure the content has enough space to be displayed inside the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QCircularProgress - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QColor",
          "source": {
            "module": "quasar",
            "symbol": "QColor"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"myColor\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default-value",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The default value to show when the model doesn't have one\n\nExamples:\ndefault-value=\"#c0c0c0\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default-view",
              "value": {
                "kind": "expression",
                "type": "'spectrum'|'tune'|'palette'"
              },
              "description": "The default view of the picker",
              "doc-url": "https://quasar.dev",
              "default": "\"spectrum\""
            },
            {
              "name": "format-model",
              "value": {
                "kind": "expression",
                "type": "'auto'|'hex'|'rgb'|'hexa'|'rgba'"
              },
              "description": "Forces a certain model format upon the model\n\nExamples:\nhex",
              "doc-url": "https://quasar.dev",
              "default": "\"auto\""
            },
            {
              "name": "palette",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Use a custom palette of colors for the palette tab\n\nExamples:\n:palette=\"[ '#019A9D', '#D9B801', 'rgb(23,120,0)', '#B2028A' ]\"",
              "doc-url": "https://quasar.dev",
              "default": "\"(hard-coded palette)\""
            },
            {
              "name": "no-header",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not render header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-footer",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not render footer; Useful when you want a specific view ('default-view' prop) and don't want the user to be able to switch it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "change",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted on lazy model value change (after user finishes selecting a color)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QColor - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QDate",
          "source": {
            "module": "quasar",
            "symbol": "QDate"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Date of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"myDate\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "landscape",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display the component in landscape mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "mask",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Mask (formatting string) used for parsing and formatting value\n\nExamples:\nYYYY-MM-DD\nMMMM Do, YYYY\nYYYY-MM-DD HH:mm:ss",
              "doc-url": "https://quasar.dev",
              "default": "\"YYYY/MM/DD\""
            },
            {
              "name": "locale",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Locale formatting options\n\nExamples:\n:locale=\"{ monthsShort: ['Ian', 'Feb', 'Mar', '...'] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "calendar",
              "value": {
                "kind": "expression",
                "type": "'gregorian'|'persian'"
              },
              "description": "Specify calendar type",
              "doc-url": "https://quasar.dev",
              "default": "\"gregorian\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "title",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "When specified, it overrides the default header title; Makes sense when not in 'minimal' mode\n\nExamples:\nBirthday",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "subtitle",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "When specified, it overrides the default header subtitle; Makes sense when not in 'minimal' mode\n\nExamples:\nJohn Doe",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "emit-immediately",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Emit model when user browses month and year too",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "default-year-month",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The default year and month to display (in YYYY/MM format) when model is unfilled (undefined or null)\n\nExamples:\n1986/02",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default-view",
              "value": {
                "kind": "expression",
                "type": "'Calendar'|'Months'|'Years'"
              },
              "description": "The view which will be displayed by default",
              "doc-url": "https://quasar.dev",
              "default": "\"Calendar\""
            },
            {
              "name": "events",
              "value": {
                "kind": "expression",
                "type": "any[]|Function"
              },
              "description": "A list of events to highlight on the calendar; If using a function, it receives the date as a String and must return a Boolean (matches or not); If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\n:events=\"['2018/11/05', '2018/11/06', '2018/11/09', '2018/11/23']\"\n:events=\"date => date[9] % 3 === 0\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "event-color",
              "value": {
                "kind": "expression",
                "type": "string|Function"
              },
              "description": "Color name (from the Quasar Color Palette); If using a function, it receives the date as a String and must return a String (color for the received date); If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nteal-10\n:event-color=\"(date) => date[9] % 2 === 0 ? 'teal' : 'orange'\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "options",
              "value": {
                "kind": "expression",
                "type": "any[]|Function"
              },
              "description": "Optionally configure the days that are selectable; If using a function, it receives the date as a String and must return a Boolean (is date acceptable or not); If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\n:options=\"['2018/11/05', '2018/11/12', '2018/11/19', '2018/11/26' ]\"\n:options=\"date => date[9] % 3 === 0\"\n:options=\"date => date >= '2018/11/03' && date <= '2018/11/15'\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "first-day-of-week",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Sets the day of the week that is considered the first day (0 - Sunday, 1 - Monday, ...); This day will show in the left-most column of the calendar\n\nExamples:\nfirst-day-of-week=\"1\"\n:first-day-of-week=\"selectedFirstDayOfTheWeek\"",
              "doc-url": "https://quasar.dev",
              "default": "\"(based on configured Quasar lang language)\""
            },
            {
              "name": "today-btn",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display a button that selects the current day",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "minimal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Don’t display the header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "reason",
                  "type": "'year'|'month'|'day'|'today'|'locale'|'mask'",
                  "description": "Reason of the user interaction (what was picked)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "details",
                  "type": "object",
                  "description": "Object of properties on the new model",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where additional buttons can go",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QDate - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QDialog",
          "source": {
            "module": "quasar",
            "symbol": "QDialog"
          },
          "attributes": [
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the content\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the content\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ color: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "User cannot dismiss Dialog if clicking outside of it or hitting ESC key; Also, an app route change won't dismiss it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-esc-dismiss",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "User cannot dismiss Dialog by hitting ESC key; No need to set it if 'persistent' prop is also set",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-backdrop-dismiss",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "User cannot dismiss Dialog by clicking outside of it; No need to set it if 'persistent' prop is also set",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-route-dismiss",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Changing route app won't dismiss Dialog; No need to set it if 'persistent' prop is also set",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "auto-close",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Any click/tap inside of the dialog will close it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "seamless",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put Dialog into seamless mode; Does not use a backdrop so user is able to interact with the rest of the page too",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "maximized",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put Dialog into maximized mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "full-width",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dialog will try to render with same width as the window",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "full-height",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dialog will try to render with same height as the window",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "'standard'|'top'|'right'|'bottom'|'left'"
              },
              "description": "Stick dialog to one of the sides (top, right, bottom or left)\n\nExamples:\ntop\nright",
              "doc-url": "https://quasar.dev",
              "default": "\"standard\""
            },
            {
              "name": "transition-show",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"scale\""
            },
            {
              "name": "transition-hide",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"scale\""
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Forces content to have squared borders",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-refocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "(Accessibility) When Dialog gets hidden, do not refocus on the DOM element that previously had focus",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-focus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "(Accessibility) When Dialog gets shown, do not switch focus on it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "shake",
              "description": "Shakes up the Dialog in order to catch user's attention",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "escape-key",
              "description": "Emitted when ESC key is pressed; Does not gets emitted if Dialog is 'persistent' or it has 'no-esc-key' set",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QDialog - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QDrawer",
          "source": {
            "module": "quasar",
            "symbol": "QDrawer"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "side",
              "value": {
                "kind": "expression",
                "type": "'left'|'right'"
              },
              "description": "Side to attach to\n\nExamples:\nright",
              "doc-url": "https://quasar.dev",
              "default": "\"left\""
            },
            {
              "name": "overlay",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Puts drawer into overlay mode (does not occupy space on screen, narrowing the page)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "width",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Width of drawer (in pixels)\n\nExamples:\n:width=\"350\"",
              "doc-url": "https://quasar.dev",
              "default": "300"
            },
            {
              "name": "mini",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Puts drawer into mini mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "mini-width",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Width of drawer (in pixels) when in mini mode\n\nExamples:\n:width=\"100\"",
              "doc-url": "https://quasar.dev",
              "default": "60"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "mini-to-overlay",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Mini mode will expand as an overlay",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "breakpoint",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Breakpoint (in pixels) of layout width up to which mobile mode is used\n\nExamples:\n1200\n:breakpoint=\"1400\"",
              "doc-url": "https://quasar.dev",
              "default": "1023"
            },
            {
              "name": "behavior",
              "value": {
                "kind": "expression",
                "type": "'default'|'desktop'|'mobile'"
              },
              "description": "Overrides the default dynamic mode into which the drawer is put on\n\nExamples:\nmobile",
              "doc-url": "https://quasar.dev",
              "default": "\"default\""
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "elevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Adds a default shadow to the header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does not auto-closes when app's route changes",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "show-if-above",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force drawer to be shown on screen on initial render if the layout width is above breakpoint, regardless of v-model; This is the default behavior when SSR is taken over by client on initial render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the drawer\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the drawer\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-swipe-open",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disables the default behavior where drawer can be swiped into view; Useful for iOS platforms where it might interfere with Safari's 'swipe to go to previous/next page' feature",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-swipe-close",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disables the default behavior where drawer can be swiped out of view (applies to drawer content only); Useful for iOS platforms where it might interfere with Safari's 'swipe to go to previous/next page' feature",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-swipe-backdrop",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disable the default behavior where drawer backdrop can be swiped",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "on-layout",
              "arguments": [
                {
                  "name": "state",
                  "type": "boolean",
                  "description": "New state",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when drawer toggles between occupying space on page or not",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "click",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user clicks/taps on the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseover",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user moves mouse cursor over the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseout",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user moves mouse cursor out of the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mini-state",
              "arguments": [
                {
                  "name": "state",
                  "type": "boolean",
                  "description": "New state",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when drawer changes the mini-mode state (sometimes it is forced to do so)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component (overridden by 'mini' slot if used and drawer is in mini mode)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mini",
              "description": "Content to show when in mini mode (overrides 'default' slot)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QDrawer - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QEditor",
          "source": {
            "module": "quasar",
            "symbol": "QEditor"
          },
          "attributes": [
            {
              "name": "fullscreen",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Fullscreen mode\n\nExamples:\n:fullscreen.sync=\"isFullscreen\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-route-fullscreen-exit",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Changing route app won't exit fullscreen",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"content\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no borders)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; toolbar buttons are shown on one-line only",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "min-height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "CSS unit for the minimum height of the editable area\n\nExamples:\n15rem\n50vh",
              "doc-url": "https://quasar.dev",
              "default": "\"10rem\""
            },
            {
              "name": "max-height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "CSS unit for maximum height of the input area\n\nExamples:\n1000px\n90vh",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "CSS value to set the height of the editable area\n\nExamples:\n100px\n50vh",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "definitions",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Definition of commands and their buttons to be included in the 'toolbar' prop\n\nExamples:\n:definitions=\"{ save: { tip: 'Save your work', icon: 'save', label: 'Save', handler: saveWork }, upload: { tip: 'Upload to cloud', icon: 'cloud_upload', label: 'Upload', handler: uploadIt } }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "fonts",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Object with definitions of fonts\n\nExamples:\n:fonts=\"{ arial: 'Arial', arial_black: 'Arial Black', comic_sans: 'Comic Sans MS' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "toolbar",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of arrays of Objects/Strings that you use to define the construction of the elements and commands available in the toolbar\n\nExamples:\nleft,center,right,justify",
              "doc-url": "https://quasar.dev",
              "default": "[[\"left\",\"center\",\"right\",\"justify\"],[\"bold\",\"italic\",\"underline\",\"strike\"],[\"undo\",\"redo\"]]"
            },
            {
              "name": "toolbar-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Font color (from the Quasar Palette) of buttons and text in the toolbar\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "toolbar-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Text color (from the Quasar Palette) of toolbar commands\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "toolbar-toggle-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Choose the active color (from the Quasar Palette) of toolbar commands button\n\nExamples:\nsecondary\nblue-3",
              "doc-url": "https://quasar.dev",
              "default": "\"primary\""
            },
            {
              "name": "toolbar-bg",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Toolbar background color (from Quasar Palette)\n\nExamples:\nsecondary\nblue-3",
              "doc-url": "https://quasar.dev",
              "default": "\"grey-3\""
            },
            {
              "name": "toolbar-outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Toolbar buttons are rendered \"outlined\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "toolbar-push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Toolbar buttons are rendered as a \"push-button\" type",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "toolbar-rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Toolbar buttons are rendered \"rounded\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Object with CSS properties and values for styling the container of QEditor\n\nExamples:\n:content-style=\"{ backgroundColor: '#C0C0C0' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "object|any[]|string"
              },
              "description": "CSS classes for the input area\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "The pure HTML of the content",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QEditor - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QExpansionItem",
          "source": {
            "module": "quasar",
            "symbol": "QExpansionItem"
          },
          "attributes": [
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'exact' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "append",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'append' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact-active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-exact-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining 'open' state; Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "expand-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "expand-icon-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Apply custom class(es) to the expand icon item section\n\nExamples:\ntext-purple",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Header label (unless using 'header' slot)\n\nExamples:\nMy expansion item",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-lines",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Apply ellipsis when there's not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the '-webkit-line-clamp' CSS property!\n\nExamples:\n1\n3\n:label-lines=\"2\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "caption",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Header sub-label (unless using 'header' slot)\n\nExamples:\nUnread message: 5",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "caption-lines",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Apply ellipsis when there's not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the '-webkit-line-clamp' CSS property!\n\nExamples:\n1\n3\n:caption-lines=\"2\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "duration",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Animation duration (in milliseconds)\n\nExamples:\n:duration=\"1000\"",
              "doc-url": "https://quasar.dev",
              "default": "300"
            },
            {
              "name": "header-inset-level",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Apply an inset to header (unless using 'header' slot); Useful when header avatar/left side is missing but you want to align content with other items that do have a left side, or when you're building a menu\n\nExamples:\n:header-inset-level=\"1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-inset-level",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Apply an inset to content (changes content padding)\n\nExamples:\n:content-inset-level=\"1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "expand-separator",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Apply a top and bottom separator when expansion item is opened",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "default-opened",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Puts expansion item into open state on initial render; Overridden by v-model if used",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "expand-icon-toggle",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies the expansion events to the expand icon only and not to the whole header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "switch-toggle-side",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Switch expand icon side (from default 'right' to 'left')",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense-toggle",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use dense mode for expand icon",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "group",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Register expansion item into a group (unique name that must be applied to all expansion items in that group) for coordinated open/close state within the group a.k.a. 'accordion mode'\n\nExamples:\nmy-emails",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "popup",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put expansion list into 'popup' mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "header-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Apply custom style to the header\n\nExamples:\nbackground: '#ff0000'\n:header-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Apply custom class(es) to the header\n\nExamples:\nmy-custom-class\n:header-class=\"{ 'my-custom-class': someCondition }\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Slot used for expansion item's content",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header",
              "description": "Slot used for overriding default header",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QExpansionItem - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QFab",
          "source": {
            "module": "quasar",
            "symbol": "QFab"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Controls state of fab actions (showing/hidden); Works best with v-model directive, otherwise use along listening to 'input' event",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "direction",
              "value": {
                "kind": "expression",
                "type": "'up'|'right'|'down'|'left'"
              },
              "description": "Direction to expand Fab Actions to\n\nExamples:\nbottom",
              "doc-url": "https://quasar.dev",
              "default": "\"right\""
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "By default, Fab Actions are hidden when user navigates to another route and this prop disables this behavior",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'a'|'submit'|'button'|'reset'"
              },
              "description": "Define the button HTML DOM type",
              "doc-url": "https://quasar.dev",
              "default": "\"a\""
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Apply the glossy effect over the button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when fab actions are shown/hidden; Captured by v-model directive",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where QFabActions may go into",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tooltip",
              "description": "Slot specifically designed for a QTooltip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QFab - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QFabAction",
          "source": {
            "module": "quasar",
            "symbol": "QFabAction"
          },
          "attributes": [
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'a'|'submit'|'button'|'reset'"
              },
              "description": "Define the button HTML DOM type",
              "doc-url": "https://quasar.dev",
              "default": "\"a\""
            },
            {
              "name": "outline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outline' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "push",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'push' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'flat' design for Fab button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "glossy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Apply the glossy effect over the button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "click",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user clicks/taps on the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion for this slot: QTooltip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QFabAction - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QField",
          "source": {
            "module": "quasar",
            "symbol": "QField"
          },
          "attributes": [
            {
              "name": "error",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does field have validation errors?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "error-message",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Validation error message (gets displayed only if 'error' is set to 'true')\n\nExamples:\nUsername must have at least 5 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-error-icon",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide error icon when there is an error",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rules",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules\n\nExamples:\n:rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"\n:rules=\"[ 'fulltime' ]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "lazy-rules",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Check validation status against the 'rules' only after field loses focus for first time",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "A text label that will “float” up above the input field, once the field gets focus\n\nExamples:\nUsername",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stack-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label will be always shown above the field regardless of field content (if any)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hint",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Helper (hint) text which gets placed below your wrapped form component\n\nExamples:\nFill in between 3 and 12 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide-hint",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide the helper (hint) text when field doesn't have focus",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "prefix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Prefix\n\nExamples:\n$",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "suffix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Suffix\n\nExamples:\n@gmail.com",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bg-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the 'loading' slot.",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clearable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clear-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Custom icon to use for the clear button when using along with 'clearable' prop\n\nExamples:\nclose",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filled",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'filled' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outlined",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outlined' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "borderless",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'borderless' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "standout",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Use 'standout' design for the field; Specifies classes to be applied when focused (overriding default ones)\n\nExamples:\nstandout\nstandout=\"bg-primary text-white\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom-slots",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enables bottom slots ('error', 'hint', 'counter')",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-bottom-space",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does not reserves space for hint/error/counter anymore when these are not used; as a result, it also disables the animation for those",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "counter",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show an automatic counter on bottom right",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove border-radius so borders are squared; Overrides 'rounded' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "items-aligned",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Align content to match QItem",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "autofocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Focus field on initial component render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "for",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "DOM element id to be used as 'for' attribute of the label and as 'id' for the focus target\n\nExamples:\nfor=\"myFieldsId\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "maxlength",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Specify a max length of model\n\nExamples:\n12",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "item-aligned",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Match inner content alignments to QItem",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "clear",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "The previous value before clearing it",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "When using the 'clearable' property, this event is emitted when the clear icon is clicked",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the model changes, only when used with 'clearable' or the 'control' scoped slot.",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "focus",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component gets focused",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "blur",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component loses focus",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Field main content",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "prepend",
              "description": "Prepend inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "append",
              "description": "Append to inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before",
              "description": "Prepend outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after",
              "description": "Append outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error",
              "description": "Slot for errors; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hint",
              "description": "Slot for hint text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "counter",
              "description": "Slot for counter text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "Override default spinner when component is in loading mode; Use in conjunction with 'loading' prop",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "control",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "string",
                  "description": "Element id used in the `for` attribute of the field label. Can be used to link the control to the label\n\nExamples:\nqf_363270c0-7a83-62b1-8dcf-6dfd64ee38fa",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "field",
                  "type": "object",
                  "description": "DOM element of the field",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "editable",
                  "type": "boolean",
                  "description": "Field is editable",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "focused",
                  "type": "boolean",
                  "description": "Field has focus",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "floatingLabel",
                  "type": "boolean",
                  "description": "Field's label is floating",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "value",
                  "type": "any",
                  "description": "Field's value\n\nExamples:\n0.241\nText",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "emitValue",
                  "type": "Function",
                  "description": "Function that emits an @input event in the context of the field",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot for controls; Suggestion QSlider, QRange, QKnob, ...",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QField - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QFooter",
          "source": {
            "module": "quasar",
            "symbol": "QFooter"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining if it is shown or hidden to the user; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"footerState\"",
              "doc-url": "https://quasar.dev",
              "default": "true",
              "type": "boolean"
            },
            {
              "name": "reveal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable 'reveal' mode; Takes into account user scroll to temporarily show/hide footer",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "elevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Adds a default shadow to the footer",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "height-hint",
              "value": {
                "kind": "expression",
                "type": "number|String "
              },
              "description": "When using SSR, you can optionally hint of the height (in pixels) of the QFooter\n\nExamples:\n150",
              "doc-url": "https://quasar.dev",
              "default": "50"
            }
          ],
          "events": [
            {
              "name": "reveal",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New 'reveal' state",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when 'reveal' state gets changed",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component; Suggestion: QToolbar",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QFooter - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QForm",
          "source": {
            "module": "quasar",
            "symbol": "QForm"
          },
          "attributes": [
            {
              "name": "autofocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Focus first focusable element on initial component render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-error-focus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not try to focus on first component that has a validation error when submitting form",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-reset-focus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not try to focus on first component when resetting form",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "greedy",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Validate all fields in form (by default it stops after finding the first invalid field with synchronous validation)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "submit",
              "description": "Emitted when all validations have passed when tethered to a submit button",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "reset",
              "description": "Emitted when all validations have been reset when tethered to a reset button; It is recommended to manually reset the wrapped components models in this handler",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "validation-success",
              "description": "Emitted after a validation was triggered and all inner Quasar components models are valid",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "validation-error",
              "description": "Emitted after a validation was triggered and at least one of the inner Quasar components models are NOT valid",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QForm - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QHeader",
          "source": {
            "module": "quasar",
            "symbol": "QHeader"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining if it is shown or hidden to the user; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"headerState\"",
              "doc-url": "https://quasar.dev",
              "default": "true",
              "type": "boolean"
            },
            {
              "name": "reveal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable 'reveal' mode; Takes into account user scroll to temporarily show/hide header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "reveal-offset",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Amount of scroll (in pixels) that should trigger a 'reveal' state change\n\nExamples:\n:reveal-offset=\"500\"",
              "doc-url": "https://quasar.dev",
              "default": "250"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "elevated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Adds a default shadow to the header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "height-hint",
              "value": {
                "kind": "expression",
                "type": "number|String "
              },
              "description": "When using SSR, you can optionally hint of the height (in pixels) of the QHeader\n\nExamples:\n150",
              "doc-url": "https://quasar.dev",
              "default": "50"
            }
          ],
          "events": [
            {
              "name": "reveal",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New 'reveal' state",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when 'reveal' state gets changed",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component; Suggestion: QToolbar",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QHeader - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QIcon",
          "source": {
            "module": "quasar",
            "symbol": "QIcon"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Name of the icon, following Quasar convention\n\nExamples:\nmap\nion-add",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Useful if icon is on the left side of something: applies a standard margin on the right side of Icon",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "right",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Useful if icon is on the right side of something: applies a standard margin on the left side of Icon",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestions: QTooltip or QMenu",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QIcon - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QImg",
          "source": {
            "module": "quasar",
            "symbol": "QImg"
          },
          "attributes": [
            {
              "name": "src",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Path to image\n\nExamples:\n(statics folder) statics/img/something.png\n(relative path format) :src=\"require('./my_img.jpg')\"\n(URL) https://some-site.net/some-img.gif",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "srcset",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Same syntax as <img> srcset attribute.\n\nExamples:\nelva-fairy-320w.jpg 320w, elva-fairy-480w.jpg 480w",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "sizes",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Same syntax as <img> sizes attribute.\n\nExamples:\n(max-width: 320px) 280px, (max-width: 480px) 440px, 800px",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "alt",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Specifies an alternate text for the image, if the image cannot be displayed\n\nExamples:\nTwo cats",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "placeholder-src",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "While waiting for your image to load, you can use a placeholder image\n\nExamples:\nhttps://some-site.net/some-placeholder.jpg",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "basic",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not use transitions; faster render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "contain",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Make sure that the image getting displayed is fully contained, regardless if additional blank space besides the image is needed on horizontal or vertical",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to CSS background-position property\n\nExamples:\n0 0\n20px 50px",
              "doc-url": "https://quasar.dev",
              "default": "\"50% 50%\""
            },
            {
              "name": "ratio",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Force the component to maintain an aspect ratio\n\nExamples:\n(Number format) :ratio=\"16/9\"\n(String format) ratio=\"1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "img-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the container of image; Does not apply to the caption\n\nExamples:\nmy-special-class\n:img-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "spinner-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for default Spinner (unless using a 'loading' slot)\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "spinner-size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name, for default Spinner (unless using a 'loading' slot)\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-default-spinner",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not display the default spinner when loading images (unless you are specifying one through the 'loading' slot)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "load",
              "arguments": [
                {
                  "name": "src",
                  "type": "string",
                  "description": "URL of image that has been loaded; useful when using 'srcset' and/or 'sizes'\n\nExamples:\nhttps://some-site.net/some-img.gif",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when image has been loaded by the browser",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error",
              "arguments": [
                {
                  "name": "src",
                  "type": "Error",
                  "description": "JS Error object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when browser could not load the image",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot can be used for captions. See examples",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "While image is loading, this slot is being displayed on top of the component; Suggestions: a spinner or text",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error",
              "description": "Optional slot to be used when image could not be loaded; make sure you assign a min-height and min-width to the component through CSS",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QImg - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QInfiniteScroll",
          "source": {
            "module": "quasar",
            "symbol": "QInfiniteScroll"
          },
          "attributes": [
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Offset (pixels) to bottom of Infinite Scroll container from which the component should start loading more content in advance\n\nExamples:\n:offset=\"250\"",
              "doc-url": "https://quasar.dev",
              "default": "500"
            },
            {
              "name": "debounce",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Debounce amount (in milliseconds)\n\nExamples:\n0\n530",
              "doc-url": "https://quasar.dev",
              "default": "100"
            },
            {
              "name": "scroll-target",
              "value": {
                "kind": "expression",
                "type": "Element|string"
              },
              "description": "CSS selector or DOM element to be used as scroll container instead of the auto detected one\n\nExamples:\n:scroll-target=\"$refs.scrollTarget\"\nscroll-target=\"scroll-target\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "reverse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Scroll area should behave like a messenger - starting scrolled to bottom and loading when reaching the top",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "load",
              "arguments": [
                {
                  "name": "index",
                  "type": "number",
                  "description": "The index parameter can be used to make some sort of pagination on the content you load. It takes numeric values starting with 1 and incrementing with each call\n\nExamples:\n12",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "done",
                  "type": "Function",
                  "description": "Function to call when you made all necessary updates. DO NOT forget to call it otherwise your loading message will continue to be displayed",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when Infinite Scroll needs to load more data",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "Slot displaying something while loading content; Example: QSpinner",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QInfiniteScroll - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QInnerLoading",
          "source": {
            "module": "quasar",
            "symbol": "QInnerLoading"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name, or standard size name (xs|sm|md|lg|xl), for the inner Spinner (unless using the default slot)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev",
              "default": "\"42px\""
            },
            {
              "name": "showing",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "State - loading or not",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition-show",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "transition-hide",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot is used for replacing default Spinner; Suggestions: a spinner or text",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QInnerLoading - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QInput",
          "source": {
            "module": "quasar",
            "symbol": "QInput"
          },
          "attributes": [
            {
              "name": "mask",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Custom mask or one of the predefined mask names\n\nExamples:\n###-##\ndate\ndatetime\ntime\nfulltime\nphone\ncard",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "fill-mask",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Fills string with specified characters (or underscore if value is not string) to fill mask's length\n\nExamples:\ntrue\n'0'\n'_'",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "reverse-fill-mask",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Fills string from the right side of the mask",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unmasked-value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model will be unmasked (won't contain tokens/separation characters)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "error",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does field have validation errors?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "error-message",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Validation error message (gets displayed only if 'error' is set to 'true')\n\nExamples:\nUsername must have at least 5 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-error-icon",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide error icon when there is an error",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rules",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules\n\nExamples:\n:rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"\n:rules=\"[ 'fulltime' ]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "lazy-rules",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Check validation status against the 'rules' only after field loses focus for first time",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "A text label that will “float” up above the input field, once the field gets focus\n\nExamples:\nUsername",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stack-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label will be always shown above the field regardless of field content (if any)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hint",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Helper (hint) text which gets placed below your wrapped form component\n\nExamples:\nFill in between 3 and 12 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide-hint",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide the helper (hint) text when field doesn't have focus",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "prefix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Prefix\n\nExamples:\n$",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "suffix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Suffix\n\nExamples:\n@gmail.com",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bg-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the 'loading' slot.",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clearable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clear-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Custom icon to use for the clear button when using along with 'clearable' prop\n\nExamples:\nclose",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filled",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'filled' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outlined",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outlined' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "borderless",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'borderless' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "standout",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Use 'standout' design for the field; Specifies classes to be applied when focused (overriding default ones)\n\nExamples:\nstandout\nstandout=\"bg-primary text-white\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom-slots",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enables bottom slots ('error', 'hint', 'counter')",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-bottom-space",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does not reserves space for hint/error/counter anymore when these are not used; as a result, it also disables the animation for those",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "counter",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show an automatic counter on bottom right",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove border-radius so borders are squared; Overrides 'rounded' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "items-aligned",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Align content to match QItem",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "autofocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Focus field on initial component render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "for",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "DOM element id to be used as 'for' attribute of the label and as 'id' for the focus target\n\nExamples:\nfor=\"myFieldsId\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"myText\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'text'|'password'|'textarea'|'email'|'search'|'tel'|'file'|'number'|'url'|'time'|'date'"
              },
              "description": "Input type\n\nExamples:\npassword",
              "doc-url": "https://quasar.dev",
              "default": "\"text\""
            },
            {
              "name": "debounce",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Debounce amount (in milliseconds) when updating model\n\nExamples:\n0\n530",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "maxlength",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Specify a max length of model\n\nExamples:\n12",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "autogrow",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Make field autogrow along with its content (uses a textarea)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "input-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the underlying input tag\n\nExamples:\nmy-special-class\n:input-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the underlying input tag\n\nExamples:\nbackground-color: #ff0000\n:input-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "clear",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "The previous value before clearing it",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "When using the 'clearable' property, this event is emitted when the clear icon is clicked",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string|number",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "focus",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component gets focused",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "blur",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component loses focus",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Field main content",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "prepend",
              "description": "Prepend inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "append",
              "description": "Append to inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before",
              "description": "Prepend outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after",
              "description": "Append outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error",
              "description": "Slot for errors; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hint",
              "description": "Slot for hint text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "counter",
              "description": "Slot for counter text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "Override default spinner when component is in loading mode; Use in conjunction with 'loading' prop",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QInput - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QIntersection",
          "source": {
            "module": "quasar",
            "symbol": "QIntersection"
          },
          "attributes": [
            {
              "name": "once",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Get triggered only once",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "margin",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "[Intersection API rootMargin prop] Allows you to specify the margins for the root, effectively allowing you to either grow or shrink the area used for intersections\n\nExamples:\n-20px 0px\n10px 20px 30px 40px",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "threshold",
              "value": {
                "kind": "expression",
                "type": "any[]|number"
              },
              "description": "[Intersection API threshold prop] Threshold(s) at which to trigger, specified as a ratio, or list of ratios, of (visible area / total area) of the observed element\n\nExamples:\n[ 0, 0.25, 0.5, 0.75, 1 ]\n:threshold=\"1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Disable visibility observable (content will remain as it was, visible or hidden)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "visibility",
              "arguments": [
                {
                  "name": "isVisible",
                  "type": "boolean",
                  "description": "Visibility status (true/false)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Fires when visibility changes",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QIntersection - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QItem",
          "source": {
            "module": "quasar",
            "symbol": "QItem"
          },
          "attributes": [
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'exact' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "append",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'append' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact-active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-exact-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "active",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put item into 'active' state",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clickable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Is QItem clickable? If it's the case, then it will add hover effects and emit 'click' events",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "inset-level",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Apply an inset; Useful when avatar/left side is missing but you want to align content with other items that do have a left side, or when you're building a menu\n\nExamples:\n:inset-level=\"1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tag",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "HTML tag to render; Suggestion: use 'label' when encapsulating a QCheckbox/QRadio/QToggle so that when user clicks/taps on the whole item it will trigger a model change for the mentioned components\n\nExamples:\na\nlabel",
              "doc-url": "https://quasar.dev",
              "default": "\"div\""
            },
            {
              "name": "manual-focus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put item into a manual focus state; Enables 'focused' prop which will determine if item is focused or not, rather than relying on native hover/focus states",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "focused",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Determines focus state, ONLY if 'manual-focus' is enabled / set to true",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where QItem's content goes",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QItem - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QItemLabel",
          "source": {
            "module": "quasar",
            "symbol": "QItemLabel"
          },
          "attributes": [
            {
              "name": "overline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Renders an overline label",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "caption",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Renders a caption label",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "header",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Renders a header label",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "lines",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Apply ellipsis when there's not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the '-webkit-line-clamp' CSS property!\n\nExamples:\n1\n3\n:lines=\"2\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The content of the label; Suggestion: text",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QItemLabel - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QItemSection",
          "source": {
            "module": "quasar",
            "symbol": "QItemSection"
          },
          "attributes": [
            {
              "name": "avatar",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Render an avatar item side (does not needs 'side' prop to be set)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "thumbnail",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Render a thumbnail item side (does not needs 'side' prop to be set)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "side",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Renders as a side of the item",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "top",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Align content to top (useful for multi-line items)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-wrap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Do not wrap text (useful for item's main content)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Section's actual content",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QItemSection - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QList",
          "source": {
            "module": "quasar",
            "symbol": "QList"
          },
          "attributes": [
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "separator",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a separator between contained items",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "padding",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a material design-like padding on top and bottom",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where the content goes; Suggestion: QItem, QExpansionItem, ...",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QList - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QKnob",
          "source": {
            "module": "quasar",
            "symbol": "QKnob"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Any number to indicate the given value of the knob. Either use this property (along with a listener for 'input' event) OR use the v-model directive\n\nExamples:\nv-model=\"myValue\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "min",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "The minimum value that the model (the knob value) should start at\n\nExamples:\n20\n5",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "The maximum value that the model (the knob value) should go to\n\nExamples:\n100\n50",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "step",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "A number representing steps in the value of the model, while adjusting the knob\n\nExamples:\n1\n5",
              "doc-url": "https://quasar.dev",
              "default": "\"1\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "center-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for the center part of the component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "track-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for the track of the component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "font-size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size of text in CSS units, including unit name. Suggestion: use 'em' units to sync with component size\n\nExamples:\n1em\n16px\n2rem",
              "doc-url": "https://quasar.dev",
              "default": "\"0.25em\""
            },
            {
              "name": "thickness",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Thickness of progress arc as a ratio (0.0 < x < 1.0) of component size\n\nExamples:\n1\n0.3",
              "doc-url": "https://quasar.dev",
              "default": "0.2"
            },
            {
              "name": "angle",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Angle to rotate progress arc by\n\nExamples:\n0\n40\n90",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show-value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enables the default slot and uses it (if available), otherwise it displays the 'value' prop as text; Make sure the text has enough space to be displayed inside the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "number",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "change",
              "arguments": [
                {
                  "name": "value",
                  "type": "number",
                  "description": "New model value\n\nExamples:\n12",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Fires at the end of a knob's adjustment and offers the value of the model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "drag-value",
              "arguments": [
                {
                  "name": "value",
                  "type": "number",
                  "description": "New model value\n\nExamples:\n12",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "The value of the model while dragging is still in progress",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QKnob - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QLayout",
          "source": {
            "module": "quasar",
            "symbol": "QLayout"
          },
          "attributes": [
            {
              "name": "view",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Defines how your layout components (header/footer/drawer) should be placed on screen; See docs examples\n\nExamples:\nhHh lpR fFf",
              "doc-url": "https://quasar.dev",
              "default": "\"hhh lpr fff\""
            },
            {
              "name": "container",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Containerize the layout which means it changes the default behavior of expanding to the whole window; Useful (but not limited to) for when using on a QDialog",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "resize",
              "arguments": [
                {
                  "name": "size",
                  "type": "object",
                  "description": "New size",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when layout size (height, width) changes",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "scroll",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Scroll details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user scrolls within layout",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "scroll-height",
              "arguments": [
                {
                  "name": "height",
                  "type": "number",
                  "description": "New scroll height of layout\n\nExamples:\n1442",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the scroll size of layout changes",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QHeader, QFooter, QDrawer, QPageContainer",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QLayout - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QLinearProgress",
          "source": {
            "module": "quasar",
            "symbol": "QLinearProgress"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Progress value (0.0 < x < 1.0)\n\nExamples:\n:value=\"0.28\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "buffer",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Optional buffer value (0.0 < x < 1.0)\n\nExamples:\n:buffer=\"0.78\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "track-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component's track from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "reverse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Reverse direction of progress",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "stripe",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Draw stripes; For determinate state only (for performance reasons)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "indeterminate",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component into indeterminate mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "query",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component into query mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QTooltip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QLinearProgress - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QMarkupTable",
          "source": {
            "module": "quasar",
            "symbol": "QMarkupTable"
          },
          "attributes": [
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "separator",
              "value": {
                "kind": "expression",
                "type": "'horizontal'|'vertical'|'cell'|'none'"
              },
              "description": "Use a separator/border between rows, columns or all cells\n\nExamples:\ncell",
              "doc-url": "https://quasar.dev",
              "default": "\"horizontal\""
            },
            {
              "name": "wrap-cells",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Wrap text within table cells",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QMarkupTable - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QMenu",
          "source": {
            "module": "quasar",
            "symbol": "QMenu"
          },
          "attributes": [
            {
              "name": "target",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Configure a target element to trigger component toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) it attaches the events to the specified DOM element (if it exists)\n\nExamples:\n:target=\"false\"\ntarget=\".my-parent\"",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "no-parent-event",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "context-menu",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the component to behave like a context menu, which opens with a right mouse click (or long tap on mobile)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the content\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the content\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ color: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fit",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to match at least the full width of its target",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "cover",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to cover its target. When used, the 'self' and 'fit' props are no longer effective",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "anchor",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the starting position or anchor point of the menu relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "self",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the menu's own position relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the menu horizontally and vertically in pixels\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "touch-position",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows for the target position to be set by the mouse position, when the target of the menu is either clicked or touched",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to not be dismissed by a click/tap outside of the menu or by hitting the ESC key",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "auto-close",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows any click/tap in the menu to close it; Useful instead of attaching events to each menu item that should close the menu on click/tap",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "separate-close-popup",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Separate from parent menu, marking it as a separate closing point for v-close-popup (without this, chained menus close all together)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Forces content to have squared borders",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-refocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "(Accessibility) When Menu gets hidden, do not refocus on the DOM element that previously had focus",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-focus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "(Accessibility) When Menu gets shown, do not switch focus on it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "max-height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum height of the menu; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-width",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum width of the menu; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition-show",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "transition-hide",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "escape-key",
              "description": "Emitted when ESC key is pressed; Does not gets emitted if Menu is 'persistent'",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QMenu - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QNoSsr",
          "source": {
            "module": "quasar",
            "symbol": "QNoSsr"
          },
          "attributes": [
            {
              "name": "tag",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "HTML tag to render\n\nExamples:\nspan\nblockquote",
              "doc-url": "https://quasar.dev",
              "default": "\"div\""
            },
            {
              "name": "placeholder",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Text to display on server-side render (unless using 'placeholder' slot)\n\nExamples:\nThis is server-side only",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot is used to render content on client-side",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "placeholder",
              "description": "Slot used as placeholder on server-side render, which gets replaced by the default slot on client-side; overrides 'placeholder' prop",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QNoSsr - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QOptionGroup",
          "source": {
            "module": "quasar",
            "symbol": "QOptionGroup"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"group\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of objects with value and label props. The binary components will be created according to this array\n\nExamples:\n:options=\"[ { label: 'Option 1', value: 'op1' }, { label: 'Option 2', value: 'op2' }, { label: 'Option 3', value: 'op3' } ]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'radio'|'checkbox'|'toggle'"
              },
              "description": "The type of input component to be used\n\nExamples:\ncheckbox",
              "doc-url": "https://quasar.dev",
              "default": "\"radio\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-color",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Should the color (if specified any) be kept when input components are unticked?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "left-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label (if any specified) should be displayed on the left side of the input components",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "inline",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show input components as inline-block rather than each having their own row",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QOptionGroup - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QPageScroller",
          "source": {
            "module": "quasar",
            "symbol": "QPageScroller"
          },
          "attributes": [
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "'top-right'|'top-left'|'bottom-right'|'bottom-left'|'top'|'right'|'bottom'|'left'"
              },
              "description": "Page side/corner to stick to\n\nExamples:\ntop-right",
              "doc-url": "https://quasar.dev",
              "default": "\"bottom-right\""
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the component horizontally and vertically in pixels\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev",
              "default": "[18,18]"
            },
            {
              "name": "expand",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "By default the component shrinks to content's size; By using this prop you make the component fully expand horizontally or vertically, based on 'position' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "scroll-offset",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Scroll offset (in pixels) from which point the component is shown on page\n\nExamples:\n550",
              "doc-url": "https://quasar.dev",
              "default": "1000"
            },
            {
              "name": "duration",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Duration (in milliseconds) of the scrolling until it reaches its target\n\nExamples:\n500",
              "doc-url": "https://quasar.dev",
              "default": "300"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPageScroller - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QPageSticky",
          "source": {
            "module": "quasar",
            "symbol": "QPageSticky"
          },
          "attributes": [
            {
              "name": "position",
              "value": {
                "kind": "expression",
                "type": "'top-right'|'top-left'|'bottom-right'|'bottom-left'|'top'|'right'|'bottom'|'left'"
              },
              "description": "Page side/corner to stick to\n\nExamples:\ntop-right",
              "doc-url": "https://quasar.dev",
              "default": "\"bottom-right\""
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the component horizontally and vertically in pixels\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "expand",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "By default the component shrinks to content's size; By using this prop you make the component fully expand horizontally or vertically, based on 'position' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPageSticky - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QPage",
          "source": {
            "module": "quasar",
            "symbol": "QPage"
          },
          "attributes": [
            {
              "name": "padding",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default responsive page padding",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "style-fn",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Override default CSS style applied to the component (sets minHeight); Function(offset: Number) => CSS props/value: Object; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n(see source code)",
              "doc-url": "https://quasar.dev",
              "default": "\"(see source code)\""
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPage - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QPageContainer",
          "source": {
            "module": "quasar",
            "symbol": "QPageContainer"
          },
          "slots": [
            {
              "name": "default",
              "description": "Encapsulates a QPage (either directly or through <router-view>)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPageContainer - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QPagination",
          "source": {
            "module": "quasar",
            "symbol": "QPagination"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Current page (must be between min/max)\n\nExamples:\n3",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "min",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Minimum page (must be lower than 'max')\n\nExamples:\n3",
              "doc-url": "https://quasar.dev",
              "default": "1"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Number of last page (must be higher than 'min')\n\nExamples:\n10",
              "doc-url": "https://quasar.dev",
              "required": true,
              "default": "100"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev",
              "default": "\"primary\""
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color (useful when you are using it along with the 'input' prop)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "input-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the input (if using one)\n\nExamples:\nbackground-color: #ff0000\n:input-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the input (if using one)\n\nExamples:\nmy-special-class\n:input-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Button size in CSS units, including unit name\n\nExamples:\n20px",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "input",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use an input instead of buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "to-fn",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Generate link for page buttons; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:to-fn=\"page => ({ query: { page } })\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "boundary-links",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show boundary button links",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "boundary-numbers",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Always show first and last page buttons (if not using 'input')",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "direction-links",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show direction buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "ellipses",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show ellipses (...) when pages are available",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "max-pages",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum number of page links to display at a time; 0 means Infinite\n\nExamples:\n5",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QPagination - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QParallax",
          "source": {
            "module": "quasar",
            "symbol": "QParallax"
          },
          "attributes": [
            {
              "name": "src",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Path to image (unless a 'media' slot is used)\n\nExamples:\n(statics folder) statics/img/something.png\n(relative path format) :src=\"require('./my_img.jpg')\"\n(URL) https://some-site.net/some-img.jpg",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "height",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Height of component (in pixels)\n\nExamples:\n:height=\"1000\"",
              "doc-url": "https://quasar.dev",
              "default": "500"
            },
            {
              "name": "speed",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Speed of parallax effect (0.0 < x < 1.0)\n\nExamples:\n:speed=\"0.24\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "scroll",
              "arguments": [
                {
                  "name": "percentage",
                  "type": "number",
                  "description": "Number between 0.0 and 1.0 defining the scrolled percentage of the component\n\nExamples:\n0.234",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when scrolling occurs",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot can be used for content that gets displayed on top of the component",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "media",
              "description": "Slot for describing <img> or <video> tags",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content",
              "vue-properties": [
                {
                  "name": "percentScrolled",
                  "type": "number",
                  "description": "Percentage (0.0 < x < 1.0) of scroll in regards to QParallax\n\nExamples:\n0.241",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Scoped slot for describing content that gets displayed on top of the component; If specified, it overrides the default slot",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QParallax - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QPopupEdit",
          "source": {
            "module": "quasar",
            "symbol": "QPopupEdit"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"myValue\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "title",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Optional title (unless 'title' slot is used)\n\nExamples:\nCalories",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "buttons",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show Set and Cancel buttons",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label-set",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override Set button label\n\nExamples:\nOK",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-cancel",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override Cancel button label\n\nExamples:\nCancel",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Class definitions to be attributed to the content\n\nExamples:\nmy-special-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the content\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ color: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev",
              "default": "\"primary\""
            },
            {
              "name": "validate",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Validates model then triggers 'save' and closes Popup; Returns a Boolean ('true' means valid, 'false' means abort); Syntax: validate(value); For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:validate=\"myValidation\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fit",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to match at least the full width of its target",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "cover",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the menu to cover its target. When used, the 'self' and 'fit' props are no longer effective",
              "doc-url": "https://quasar.dev",
              "default": "true",
              "type": "boolean"
            },
            {
              "name": "anchor",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the starting position or anchor point of the menu relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "self",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the menu's own position relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the menu horizontally and vertically in pixels\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "touch-position",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows for the target position to be set by the mouse position, when the target of the menu is either clicked or touched",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "persistent",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Avoid menu closing by hitting ESC key or by clicking/tapping outside of the Popup",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "separate-close-popup",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Separate from parent menu, marking it as a separate closing point for v-close-popup (without this, chained menus close all together)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Forces menu to have squared borders",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "max-height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum height of the menu; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-width",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum width of the menu; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when Popup gets cancelled in order to reset model to its initial value; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted right before Popup gets shown",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "description": "Emitted right after Popup gets shown",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted right before Popup gets dismissed",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "description": "Emitted right after Popup gets dismissed",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "save",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "Validated value to be saved",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "initialValue",
                  "type": "any",
                  "description": "Initial value, before changes",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when value has been successfully validated and it should be saved",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "cancel",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "Edited value",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "initialValue",
                  "type": "any",
                  "description": "Initial value, before changes",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user cancelled the change (hit ESC key or clicking outside of Popup or hit 'Cancel' button)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "Slot for custom title (overrides 'title' prop when used)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default",
              "vue-properties": [
                {
                  "name": "initialValue",
                  "type": "any",
                  "description": "Initial value\n\nExamples:\n0.241\nText",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "value",
                  "type": "any",
                  "description": "Current value\n\nExamples:\n0.241\nText",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "emitValue",
                  "type": "Function",
                  "description": "Function that emits an @input event in the context of the popup edit",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "validate",
                  "type": "Function",
                  "description": "Function that checks if the value is valid",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "set",
                  "type": "Function",
                  "description": "Function that sets the value and closes the popup",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "cancel",
                  "type": "Function",
                  "description": "Function that cancels the editing and reverts the value to the initialValue",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Used for injecting the form component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPopupEdit - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QPopupProxy",
          "source": {
            "module": "quasar",
            "symbol": "QPopupProxy"
          },
          "attributes": [
            {
              "name": "target",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Configure a target element to trigger component toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) it attaches the events to the specified DOM element (if it exists)\n\nExamples:\n:target=\"false\"\ntarget=\".my-parent\"",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "no-parent-event",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "context-menu",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the component to behave like a context menu, which opens with a right mouse click (or long tap on mobile)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Defines the state of the component (shown/hidden); Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "breakpoint",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Breakpoint (in pixels) of window width from where a Menu will get to be used instead of a Dialog\n\nExamples:\n992\n:breakpoint=\"1024\"",
              "doc-url": "https://quasar.dev",
              "default": "450"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPopupProxy - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QPullToRefresh",
          "source": {
            "module": "quasar",
            "symbol": "QPullToRefresh"
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon to display when refreshing the content\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-mouse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Don't listen for mouse events",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "refresh",
              "arguments": [
                {
                  "name": "done",
                  "type": "Function",
                  "description": "Call the done() function when your data has been refreshed",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Called whenever a refresh is triggered; at this time, your function should load more data",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Content (area controlled by the component) goes here",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QPullToRefresh - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QRadio",
          "source": {
            "module": "quasar",
            "symbol": "QRadio"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"option\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "val",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "The actual value of the option with which model value is changed\n\nExamples:\nopt1\n50",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Label to display along the radio control (or use the default slot instead of this prop)\n\nExamples:\nlabel=\"Option 1\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label (if any specified) should be displayed on the left side of the checkbox",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-color",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Should the color (if specified any) be kept when checkbox is unticked?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot can be used as label, unless 'label' prop is specified; Suggestion: string",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QRadio - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QRange",
          "source": {
            "module": "quasar",
            "symbol": "QRange"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Model of the component of type { min, max } (both values must be between global min/max); Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"positionModel\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "min",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Minimum value of the model\n\nExamples:\n:min=\"0\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum value of the model\n\nExamples:\n:max=\"100\"",
              "doc-url": "https://quasar.dev",
              "default": "100"
            },
            {
              "name": "step",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity\n\nExamples:\n:step=\"1\"",
              "doc-url": "https://quasar.dev",
              "default": "1"
            },
            {
              "name": "drag-range",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "User can drag range instead of just the two thumbs",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "drag-only-range",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "User can drag only the range instead and NOT the two thumbs",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Popup labels (for left and right thumbs) when user clicks/taps on the slider thumb and moves it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for labels background from the Quasar Color Palette; Applies to both labels, unless specific label color props are used\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for labels text from the Quasar Color Palette; Applies to both labels, unless specific label text color props are used\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for left label background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for left label text from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right-label-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for right label background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right-label-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for right label text from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label-value",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Override default label for min value\n\nExamples:\n:left-label-value=\"model.min + 'px'\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right-label-value",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Override default label for max value\n\nExamples:\n:right-label-value=\"model.max + 'px'\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-always",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Always display the labels",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "markers",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display markers on the track, one for each possible value for the model",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "snap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Snap thumbs on valid values, rather than sliding freely; Suggestion: use with 'step' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "change",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted on lazy model value change (after user slides then releases thumb)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QRange - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QRating",
          "source": {
            "module": "quasar",
            "symbol": "QRating"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\n:value=\"2\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Number of icons to display\n\nExamples:\n3\n:max=\"5\"",
              "doc-url": "https://quasar.dev",
              "default": "5"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string|any[]"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon-selected",
              "value": {
                "kind": "expression",
                "type": "string|any[]"
              },
              "description": "Icon name following Quasar convention to be used when selected (optional); make sure you have the icon library installed unless you are using 'img:' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-reset",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used, disables default behavior of clicking/tapping on icon which represents current model value to reset model to 0",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QRating - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QResizeObserver",
          "source": {
            "module": "quasar",
            "symbol": "QResizeObserver"
          },
          "attributes": [
            {
              "name": "debounce",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Debounce amount (in milliseconds)\n\nExamples:\n0\n530",
              "doc-url": "https://quasar.dev",
              "default": "100"
            }
          ],
          "events": [
            {
              "name": "resize",
              "arguments": [
                {
                  "name": "size",
                  "type": "object",
                  "description": "New size",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Parent element has resized (width or height changed)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QResizeObserver - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QScrollArea",
          "source": {
            "module": "quasar",
            "symbol": "QScrollArea"
          },
          "attributes": [
            {
              "name": "thumb-style",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Object with CSS properties and values for styling the thumb of custom scrollbar\n\nExamples:\n:thumb-style=\"{ right: '4px', borderRadius: '5px', background: 'red', width: '10px', opacity: 1 }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Object with CSS properties and values for styling the container of QScrollArea\n\nExamples:\n:content-style=\"{ backgroundColor: '#C0C0C0' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-active-style",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Object with CSS properties and values for styling the container of QScrollArea when scroll area becomes active (is mouse hovered)\n\nExamples:\n:content-active-style=\"{ backgroundColor: 'white' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "visible",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "(Desktop only) Manually control the visibility of the scrollbar; Overrides default mouse over/leave behavior",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "delay",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "When content changes, the scrollbar appears; this delay defines the amount of time (in milliseconds) before scrollbars disappear again (if component is not hovered)\n\nExamples:\n500\n:delay=\"550\"",
              "doc-url": "https://quasar.dev",
              "default": "1000"
            },
            {
              "name": "horizontal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Register for horizontal scroll instead of vertical (which is default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QScrollArea - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QScrollObserver",
          "source": {
            "module": "quasar",
            "symbol": "QScrollObserver"
          },
          "attributes": [
            {
              "name": "debounce",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Debounce amount (in milliseconds)\n\nExamples:\n0\n530",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "horizontal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Register for horizontal scroll instead of vertical (which is default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "scroll",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Scroll details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when scroll position changes",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QScrollObserver - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSelect",
          "source": {
            "module": "quasar",
            "symbol": "QSelect"
          },
          "attributes": [
            {
              "name": "virtual-scroll-horizontal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Make virtual list work in horizontal mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "virtual-scroll-slice-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Number of options to render in the virtual list\n\nExamples:\n:virtual-scroll-slice-size=\"60\"",
              "doc-url": "https://quasar.dev",
              "default": "\"30\""
            },
            {
              "name": "virtual-scroll-item-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Default size in pixels (height if vertical, width if horizontal) of an option; This value is used for rendering the initial list; Try to use a value close to the minimum size of an item\n\nExamples:\n:virtual-scroll-item-size=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"24\""
            },
            {
              "name": "virtual-scroll-sticky-size-start",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the start of the list; A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-start=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "virtual-scroll-sticky-size-end",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the end of the list; A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-end=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "error",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does field have validation errors?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "error-message",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Validation error message (gets displayed only if 'error' is set to 'true')\n\nExamples:\nUsername must have at least 5 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-error-icon",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide error icon when there is an error",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rules",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules\n\nExamples:\n:rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"\n:rules=\"[ 'fulltime' ]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "lazy-rules",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Check validation status against the 'rules' only after field loses focus for first time",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "A text label that will “float” up above the input field, once the field gets focus\n\nExamples:\nUsername",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stack-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label will be always shown above the field regardless of field content (if any)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hint",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Helper (hint) text which gets placed below your wrapped form component\n\nExamples:\nFill in between 3 and 12 characters",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide-hint",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide the helper (hint) text when field doesn't have focus",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "prefix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Prefix\n\nExamples:\n$",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "suffix",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Suffix\n\nExamples:\n@gmail.com",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bg-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the 'loading' slot.",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clearable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "clear-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Custom icon to use for the clear button when using along with 'clearable' prop\n\nExamples:\nclose",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filled",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'filled' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "outlined",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'outlined' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "borderless",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use 'borderless' design for the field",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "standout",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Use 'standout' design for the field; Specifies classes to be applied when focused (overriding default ones)\n\nExamples:\nstandout\nstandout=\"bg-primary text-white\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom-slots",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enables bottom slots ('error', 'hint', 'counter')",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-bottom-space",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Does not reserves space for hint/error/counter anymore when these are not used; as a result, it also disables the animation for those",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "counter",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Show an automatic counter on bottom right",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "rounded",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a small standard border-radius for a squared shape of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Remove border-radius so borders are squared; Overrides 'rounded' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "items-aligned",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Align content to match QItem",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "autofocus",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Focus field on initial component render",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "for",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "DOM element id to be used as 'for' attribute of the label and as 'id' for the focus target\n\nExamples:\nfor=\"myFieldsId\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number|string|any[]"
              },
              "description": "Model of the component; Must be Array if using 'multiple' prop; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"myModel\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "multiple",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow multiple selection; Model must be Array",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "display-value",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Override default selection string, if not using 'selected' slot/scoped slot and if not using 'use-chips' prop\n\nExamples:\nOptions: x, y, z",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "display-value-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render selected option(s); Use it when the selected option(s) might be unsafe (from user input); Does NOT apply when using 'selected' or 'selected-item' slots!",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            },
            {
              "name": "options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Available options that the user can select from. For best performance freeze the list of options.\n\nExamples:\n:options=\"[ 'BMW', 'Samsung Phone' ]\"\n:options=\"[ { label: 'BMW', value: 'car' }, { label: 'Samsung Phone', value: 'phone' } ]\"",
              "doc-url": "https://quasar.dev",
              "default": "\"[]\""
            },
            {
              "name": "option-value",
              "value": {
                "kind": "expression",
                "type": "Function|string"
              },
              "description": "Property of option which holds the 'value'; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\noption-value=\"modelNumber\"\n:option-value=\"(item) => item === null ? null : item.modelNumber\"",
              "doc-url": "https://quasar.dev",
              "default": "\"value\""
            },
            {
              "name": "option-label",
              "value": {
                "kind": "expression",
                "type": "Function|string"
              },
              "description": "Property of option which holds the 'label'; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\noption-label=\"itemName\"\n:option-label=\"(item) => item === null ? 'Null value' : item.itemName\"",
              "doc-url": "https://quasar.dev",
              "default": "\"label\""
            },
            {
              "name": "option-disable",
              "value": {
                "kind": "expression",
                "type": "Function|string"
              },
              "description": "Property of option which tells it's disabled; The value of the property must be a Boolean; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\noption-disable=\"cannotSelect\"\n:option-disable=\"(item) => item === null ? true : item.cannotSelect\"",
              "doc-url": "https://quasar.dev",
              "default": "\"disable\""
            },
            {
              "name": "hide-selected",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hides selection; Use the underlying input tag to hold the label (instead of showing it to the right of the input) of the selected option; Only works for non 'multiple' Selects",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-dropdown-icon",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hides dropdown icon",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dropdown-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-values",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Allow a maximum number of selections that the user can do\n\nExamples:\n5",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "options-dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode for options list; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "options-dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Options menu will be colored with a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "options-selected-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "CSS class name for options that are active/selected; Set it to an empty string to stop applying the default (which is text-* where * is the 'color' prop value)\n\nExamples:\ntext-orange",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "options-cover",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Expanded menu will cover the component (will not work along with 'use-input' prop for obvious reasons)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "options-sanitize",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Force use of textContent instead of innerHTML to render options; Use it when the options might be unsafe (from user input); Does NOT apply when using 'option' slot!",
              "doc-url": "https://quasar.dev",
              "default": "\"false\"",
              "type": "boolean"
            },
            {
              "name": "popup-content-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Class definitions to be attributed to the popup content\n\nExamples:\nmy-special-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "popup-content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the popup content\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "use-input",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use an input tag where users can type",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "use-chips",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use QChip to show what is currently selected",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "fill-input",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Fills the input with current value; Useful along with 'hide-selected'; Does NOT works along with 'multiple' selection",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "new-value-mode",
              "value": {
                "kind": "expression",
                "type": "'add'|'add-unique'|'toggle'"
              },
              "description": "Enables creation of new values and defines behavior when a new value is added: 'add' means it adds the value (even if possible duplicate), 'add-unique' adds only unique values, and 'toggle' adds or removes the value (based on if it exists or not already); When using this prop then listening for @new-value becomes optional (only to override the behavior defined by 'new-value-mode')",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "map-options",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Try to map labels of model from 'options' Array; has a small performance penalty; If you are using emit-value you will probably need to use map-options to display the label text in the select field rather than the value;  Refer to the 'Affecting model' section above",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "emit-value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Update model with the value of the selected option instead of the whole option",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "input-debounce",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Debounce the input model update with an amount of milliseconds\n\nExamples:\n650",
              "doc-url": "https://quasar.dev",
              "default": "500"
            },
            {
              "name": "input-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the underlying input tag\n\nExamples:\nmy-special-class\n:input-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the underlying input tag\n\nExamples:\nbackground-color: #ff0000\n:input-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition-show",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Transition when showing the menu/dialog; One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "transition-hide",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Transition when hiding the menu/dialog; One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"fade\""
            },
            {
              "name": "behavior",
              "value": {
                "kind": "expression",
                "type": "'default'|'menu'|'dialog'"
              },
              "description": "Overrides the default dynamic mode of showing as menu on desktop and dialog on mobiles",
              "doc-url": "https://quasar.dev",
              "default": "\"default\""
            }
          ],
          "events": [
            {
              "name": "virtual-scroll",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Object of properties on the new scroll position",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the virtual scroll occurs",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "clear",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "The previous value before clearing it",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "When using the 'clearable' property, this event is emitted when the clear icon is clicked",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "remove",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Removal details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when an option is removed from selection",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "add",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Addition details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when an option is added to the selection",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "new-value",
              "arguments": [
                {
                  "name": "inputValue",
                  "type": "string",
                  "description": "What the user typed\n\nExamples:\nphone",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "doneFn",
                  "type": "Function",
                  "description": "Adds (optional) value to the model; Do not forget to call it after you validate the newly created value; Call it with no parameters if nothing should be added",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Enables creation of new values; Emitted when a new value has been created; You can override 'new-value-mode' property with it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter",
              "arguments": [
                {
                  "name": "inputValue",
                  "type": "string",
                  "description": "What the user typed\n\nExamples:\nphone",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "doneFn",
                  "type": "Function",
                  "description": "Supply a function which makes the necessary updates",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "abortFn",
                  "type": "Function",
                  "description": "Call this function if something went wrong",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user wants to filter a value",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter-abort",
              "description": "Emitted when a filtering was aborted; Probably a new one was requested?",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "popup-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the select options menu or dialog is shown.",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "popup-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the select options menu or dialog is hidden.",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Field main content",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "prepend",
              "description": "Prepend inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "append",
              "description": "Append to inner field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before",
              "description": "Prepend outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after",
              "description": "Append outer field; Suggestions: QIcon, QBtn",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error",
              "description": "Slot for errors; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hint",
              "description": "Slot for hint text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "counter",
              "description": "Slot for counter text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "description": "Override default spinner when component is in loading mode; Suggestion: spinners",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selected",
              "description": "Override default selection slot; Suggestion: QChip",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-options",
              "description": "Template slot for the elements that should be rendered before the list of options",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after-options",
              "description": "Template slot for the elements that should be rendered after the list of options",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-option",
              "vue-properties": [
                {
                  "name": "inputValue",
                  "type": "string",
                  "description": "Input textfield value, if any (not QSelect model)\n\nExamples:\ntyped something",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "What should the menu display after filtering options and none are left to be displayed; Suggestion: <div>",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selected-item",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number",
                  "description": "Selection index\n\nExamples:\n0",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "opt",
                  "type": "any",
                  "description": "Selected option -- its value is taken from model",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "selected",
                  "type": "boolean",
                  "description": "Always true -- passed down as prop to QItem (when using QItem)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "removeAtIndex",
                  "type": "Function",
                  "description": "Remove selected option located at specific index",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleOption",
                  "type": "Function",
                  "description": "Add/remove option from model",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "tabindex",
                  "type": "number",
                  "description": "Tabindex HTML attribute value associated with respective option",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Override default selection slot; Suggestion: QChip",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "option",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number",
                  "description": "Option index\n\nExamples:\n0",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "opt",
                  "type": "any",
                  "description": "Option -- its value is taken from 'options' prop",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "selected",
                  "type": "boolean",
                  "description": "Is option selected?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "focused",
                  "type": "boolean",
                  "description": "Is option focused?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleOption",
                  "type": "Function",
                  "description": "Add/remove option from model",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "setOptionIndex",
                  "type": "Function",
                  "description": "Sets option from menu as 'focused'",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "itemProps",
                  "type": "object",
                  "description": "Computed properties passed down to QItem",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "itemEvents",
                  "type": "object",
                  "description": "Computed events passed down to QItem",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Customize how options are rendered; Suggestion: QItem",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QSelect - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QSeparator",
          "source": {
            "module": "quasar",
            "symbol": "QSeparator"
          },
          "attributes": [
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "spaced",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "If set to true, the top and bottom margins will be set to 8px",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "inset",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "if set to true, the left and right margins will be set to 16px. If set to item, the left and right margins will be set to 72px. If set to item-thumbnail, the left margin is set to 116px and right margin is set to 0px\n\nExamples:\nitem\nitem-thumbnail",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "vertical",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "If set to true, the separator will be vertical.",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSeparator - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSlideItem",
          "source": {
            "module": "quasar",
            "symbol": "QSlideItem"
          },
          "attributes": [
            {
              "name": "left-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for left-side background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for right-side background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for top-side background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for bottom-side background from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "left",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user finished sliding the item to the left",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user finished sliding the item to the right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user finished sliding the item up",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user finished sliding the item down",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "action",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user finished sliding the item to either sides",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where item's sections go; Suggestion: QItemSection",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left",
              "description": "Left side content when sliding",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right",
              "description": "Right side content when sliding",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top",
              "description": "Top side content when sliding",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom",
              "description": "Bottom side content when sliding",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QSlideItem - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSlideTransition",
          "source": {
            "module": "quasar",
            "symbol": "QSlideTransition"
          },
          "attributes": [
            {
              "name": "appear",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "If set to true, the transition will be applied on the initial render.",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "duration",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Duration (in milliseconds) enabling animated scroll.\n\nExamples:\n500\n:duration=\"500\"",
              "doc-url": "https://quasar.dev",
              "default": "300"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where content goes",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QSlideTransition - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSlider",
          "source": {
            "module": "quasar",
            "symbol": "QSlider"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Model of the component (must be between min/max); Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"positionModel\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "min",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Minimum value of the model\n\nExamples:\n:min=\"0\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum value of the model\n\nExamples:\n:max=\"100\"",
              "doc-url": "https://quasar.dev",
              "default": "100"
            },
            {
              "name": "step",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity\n\nExamples:\n:step=\"1\"",
              "doc-url": "https://quasar.dev",
              "default": "1"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Popup a label when user clicks/taps on the slider thumb and moves it",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "label-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-value",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Override default label value\n\nExamples:\n:label-value=\"model + 'px'\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label-always",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Always display the label",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "markers",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display markers on the track, one for each possible value for the model",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "snap",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Snap on valid values, rather than sliding freely; Suggestion: use with 'step' prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "change",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted on lazy model value change (after user slides then releases the thumb)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSlider - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QSpace",
          "source": {
            "module": "quasar",
            "symbol": "QSpace"
          },
          "slots": [],
          "description": "QSpace - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinner",
          "source": {
            "module": "quasar",
            "symbol": "QSpinner"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "thickness",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Override value to use for stroke-width\n\nExamples:\n2\n5",
              "doc-url": "https://quasar.dev",
              "default": "5"
            }
          ],
          "slots": [],
          "description": "QSpinner - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerAudio",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerAudio"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerAudio - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerBall",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerBall"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerBall - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerBars",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerBars"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerBars - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerComment",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerComment"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerComment - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerCube",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerCube"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerCube - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerDots",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerDots"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerDots - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerFacebook",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerFacebook"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerFacebook - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerGears",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerGears"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerGears - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerGrid",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerGrid"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerGrid - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerHearts",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerHearts"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerHearts - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerHourglass",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerHourglass"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerHourglass - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerInfinity",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerInfinity"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerInfinity - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerIos",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerIos"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerIos - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerOval",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerOval"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerOval - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerPie",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerPie"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerPie - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerPuff",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerPuff"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerPuff - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerRadio",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerRadio"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerRadio - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerRings",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerRings"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerRings - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSpinnerTail",
          "source": {
            "module": "quasar",
            "symbol": "QSpinnerTail"
          },
          "attributes": [
            {
              "name": "size",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)\n\nExamples:\n16px\n2rem\nxs\nmd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [],
          "description": "QSpinnerTail - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QSplitter",
          "source": {
            "module": "quasar",
            "symbol": "QSplitter"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Model of the component defining the split ratio percent (0.0 < x < 100.0) between panels; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"ratio\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "reverse",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Apply the model size to the second panel (by default it applies to the first)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "unit",
              "value": {
                "kind": "expression",
                "type": "'%'|'px'"
              },
              "description": "CSS unit for the model",
              "doc-url": "https://quasar.dev",
              "default": "\"%\""
            },
            {
              "name": "horizontal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the splitter to split its two panels horizontally, instead of vertically",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "limits",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two values representing the minimum and maximum split size of the two panels; When 'px' unit is set then you can use Infinity as the second value to make it unbound on the other side\n\nExamples:\n:limits=\"[30, 70]\"\n:limits=\"[0, Infinity]\"",
              "doc-url": "https://quasar.dev",
              "default": "\"For '%' unit: [10, 90]; For 'px' unit: [50, Infinity]\""
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "before-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the 'before' panel\n\nExamples:\nbg-deep-orange\n:before-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the 'after' panel\n\nExamples:\nbg-deep-orange\n:after-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "separator-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the splitter separator\n\nExamples:\nbg-deep-orange\n:separator-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "separator-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the splitter separator\n\nExamples:\nbackground-color: #ff0000\n:separator-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default lighter color on the separator; To be used when background is darker; Avoid using when you are overriding through separator-class or separator-style props",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "number",
                  "description": "New model value (0.0 < x < 100.0) defining the ratio between panels\n\nExamples:\n0.22",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component's model value changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component; Suggestion: QTooltip, QMenu",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before",
              "description": "Content of the panel on left/top",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after",
              "description": "Content of the panel on right/bottom",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "separator",
              "description": "Content to be placed inside the separator; By default it is centered",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QSplitter - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QStep",
          "source": {
            "module": "quasar",
            "symbol": "QStep"
          },
          "attributes": [
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Panel name\n\nExamples:\naccounts\nfirstPanel\n:name=\"1\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "title",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Step title\n\nExamples:\nAd Groups\nPayment",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "caption",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Step’s additional information that appears beneath the title\n\nExamples:\nCreate an account\nPayment details",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "prefix",
              "value": {
                "kind": "expression",
                "type": "string|number"
              },
              "description": "Step's prefix (max 2 characters) which replaces the icon if step does not has error, is being edited or is marked as done\n\nExamples:\n1\n2\nA\nB",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "done-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "done-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header-nav",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow navigation through the header",
              "doc-url": "https://quasar.dev",
              "default": "true",
              "type": "boolean"
            },
            {
              "name": "done",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Mark the step as 'done'",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "error",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Mark the step as having an error",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The content of the step; Can also contain a QStepperNavigation if you want to handle step navigation and don't have a global navigation in place",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QStep - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QStepper",
          "source": {
            "module": "quasar",
            "symbol": "QStepper"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component defining current panel's name; If used as Number, it does not defines panel index though but slide name's which may be an Integer; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"panelName\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-alive",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to using Vue's native <keep-alive> component on the content",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "animated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable transitions between panel (also see 'transition-prev' and 'transition-next' props)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "infinite",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes component appear as infinite (when reaching last panel, next one will become the first one)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "swipeable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable swipe events (may interfere with content's touch/mouse events)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "transition-prev",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"slide-right\""
            },
            {
              "name": "transition-next",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"slide-left\""
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "vertical",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put Stepper in vertical mode (instead of horizontal by default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "alternative-labels",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use alternative labels (applies only to horizontal stepper)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "header-nav",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow navigation through the header",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "contracted",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide header labels on narrow windows",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "inactive-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "inactive-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "done-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "done-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "error-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string|number",
                  "description": "New current panel name\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component changes the model; This event _isn't_ fired if the model is changed externally; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition is going\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition is happening\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted before transitioning to a new panel",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition has occurred\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition has happened\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component transitioned to a new panel",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QStep",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "navigation",
              "description": "Slot specific for the global navigation; Suggestion: QStepperNavigation",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "message",
              "description": "Slot specific for putting a message on top of each step (if horizontal stepper) or above steps (if vertical); Suggestion: QBanner, div.q-pa-lg",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QStepper - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QStepperNavigation",
          "source": {
            "module": "quasar",
            "symbol": "QStepperNavigation"
          },
          "slots": [
            {
              "name": "default",
              "description": "The content of the custom navigation, child of a QStep or of a QStepper (globally, through 'navigation' slot)",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QStepperNavigation - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTabPanel",
          "source": {
            "module": "quasar",
            "symbol": "QTabPanel"
          },
          "attributes": [
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Panel name\n\nExamples:\naccounts\nfirstPanel\n:name=\"1\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTabPanel - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTabPanels",
          "source": {
            "module": "quasar",
            "symbol": "QTabPanels"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Model of the component defining current panel's name; If used as Number, it does not defines panel index though but slide name's which may be an Integer; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"panelName\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-alive",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to using Vue's native <keep-alive> component on the content",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "animated",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable transitions between panel (also see 'transition-prev' and 'transition-next' props)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "infinite",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Makes component appear as infinite (when reaching last panel, next one will become the first one)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "swipeable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Enable swipe events (may interfere with content's touch/mouse events)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "transition-prev",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"slide-right\""
            },
            {
              "name": "transition-next",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"slide-left\""
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string|number",
                  "description": "New current panel name\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component changes the model; This event _isn't_ fired if the model is changed externally; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition is going\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition is happening\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted before transitioning to a new panel",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition",
              "arguments": [
                {
                  "name": "newVal",
                  "type": "string|number",
                  "description": "Panel name towards transition has occurred\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "oldVal",
                  "type": "string|number",
                  "description": "Panel name from which transition has happened\n\nExamples:\ndashboard",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component transitioned to a new panel",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTabPanels - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QTable",
          "source": {
            "module": "quasar",
            "symbol": "QTable"
          },
          "attributes": [
            {
              "name": "fullscreen",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Fullscreen mode\n\nExamples:\n:fullscreen.sync=\"isFullscreen\"",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-route-fullscreen-exit",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Changing route app won't exit fullscreen",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "data",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Rows of data to display\n\nExamples:\n:data=\"myData\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "row-key",
              "value": {
                "kind": "expression",
                "type": "string|Function"
              },
              "description": "Property of each row that defines the unique key of each row (the result must be a primitive, not Object, Array, etc); The value of property must be string or a function taking a row and returning the desired (nested) key in the row; If supplying a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nrow-key=\"name\"\n:row-key=\"row => row.name\"",
              "doc-url": "https://quasar.dev",
              "default": "\"id\""
            },
            {
              "name": "virtual-scroll",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display data using QVirtualScroll (for non-grid mode only)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "virtual-scroll-slice-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Number of rows to render in the virtual list\n\nExamples:\n:virtual-scroll-slice-size=\"60\"",
              "doc-url": "https://quasar.dev",
              "default": "\"30\""
            },
            {
              "name": "virtual-scroll-item-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Default size in pixels of a row; This value is used for rendering the initial table; Try to use a value close to the minimum size of a row\n\nExamples:\n:virtual-scroll-item-size=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"48 (24 if dense)\""
            },
            {
              "name": "virtual-scroll-sticky-size-start",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels of the sticky header (if using one); A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-start=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "virtual-scroll-sticky-size-end",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels of the sticky footer part (if using one); A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-end=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev",
              "default": "\"grey-8\""
            },
            {
              "name": "grid",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display data as a grid instead of the default table",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "grid-header",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display header for grid-mode also",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; Connect with $q.screen for responsive behavior",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "columns",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "The column definitions (Array of Objects)\n\nExamples:\n:columns=\"tableColumns\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "visible-columns",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Array of Strings defining column names ('name' property of each column from 'columns' prop definitions)\n\nExamples:\n:visible-columns=\"myCols\"\n[ 'desc', 'carbs', 'protein' ]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put Table into 'loading' state; Notify the user something is happening behind the covers",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "title",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Table title\n\nExamples:\nDevice list",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide-header",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide table header layer",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-bottom",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Hide table bottom layer",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "separator",
              "value": {
                "kind": "expression",
                "type": "'horizontal'|'vertical'|'cell'|'none'"
              },
              "description": "Use a separator/border between rows, columns or all cells\n\nExamples:\ncell",
              "doc-url": "https://quasar.dev",
              "default": "\"horizontal\""
            },
            {
              "name": "wrap-cells",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Wrap text within table cells",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "binary-state-sort",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Skip the third state (unsorted) when user toggles column sort direction",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-data-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override default text to display when no data is available\n\nExamples:\nNo devices available",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-results-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override default text to display when user filters the table and no matched results are found\n\nExamples:\nNo matched records",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "loading-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override default text to display when table is in loading state (see 'loading' prop)\n\nExamples:\nLoading devices...",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selected-rows-label",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Text to display when user selected at least one row; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:selected-rows-label=\"getSelectedString\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "rows-per-page-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Text to override default rows per page label at bottom of table\n\nExamples:\nRecords per page:",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "pagination-label",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Text to override default pagination label at bottom of table (unless 'pagination' scoped slot is used); For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:pagination-label=\"getPaginationLabel\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "table-style",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS style to apply to native HTML <table> element's wrapper (which is a DIV)\n\nExamples:\nbackground-color: #ff0000\n:table-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "table-class",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS classes to apply to native HTML <table> element's wrapper (which is a DIV)\n\nExamples:\nmy-special-class\n:table-class=\"{ 'my-special-class': [Boolean condition] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "table-header-style",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS style to apply to header of native HTML <table> (which is a TR)\n\nExamples:\nbackground-color: #ff0000\n:table-header-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "table-header-class",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS classes to apply to header of native HTML <table> (which is a TR)\n\nExamples:\nmy-special-class\n:table-header-class=\"{ 'my-special-class': [Boolean condition] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "card-container-style",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS style to apply to the cards container (when in grid mode)\n\nExamples:\nbackground-color: #ff0000\n:card-container-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "card-container-class",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS classes to apply to the cards container (when in grid mode)\n\nExamples:\nmy-special-class\njustify-center\n:card-container-class=\"{ 'my-special-class': [Boolean condition] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "card-style",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS style to apply to the card (when in grid mode)\n\nExamples:\nbackground-color: #ff0000\n:card-style=\"{ backgroundColor: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "card-class",
              "value": {
                "kind": "expression",
                "type": "string|any[]|object"
              },
              "description": "CSS classes to apply to the card (when in grid mode)\n\nExamples:\nmy-special-class\n:card-class=\"{ 'my-special-class': [Boolean condition] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "String/Object to filter table with; When using an Object it requires 'filter-method' to also be specified since it will be a custom filtering\n\nExamples:\n:filter=\"myFilterInput\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter-method",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "The actual filtering mechanism; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n(see source code)",
              "doc-url": "https://quasar.dev",
              "default": "\"(see source code)\""
            },
            {
              "name": "pagination",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Pagination object\n\nExamples:\n:pagination.sync=\"myPagination\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "rows-per-page-options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Options for user to pick (Numbers); Number 0 means 'Show all rows in one page'\n\nExamples:\n:rows-per-page-options=\"[10, 20]\"",
              "doc-url": "https://quasar.dev",
              "default": "\"[3, 5, 7, 10, 15, 20, 25, 50, 0]\""
            },
            {
              "name": "selection",
              "value": {
                "kind": "expression",
                "type": "'single'|'multiple'|'none'"
              },
              "description": "Selection type\n\nExamples:\nmultiple",
              "doc-url": "https://quasar.dev",
              "default": "\"none\""
            },
            {
              "name": "selected",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Keeps the user selection array\n\nExamples:\n:selected.sync=\"selection\"",
              "doc-url": "https://quasar.dev",
              "default": "\"[]\""
            },
            {
              "name": "sort-method",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "The actual sort mechanism. Function (rows, sortBy, descending) => sorted rows; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n(see source code)",
              "doc-url": "https://quasar.dev",
              "default": "\"(see source code)\""
            }
          ],
          "events": [
            {
              "name": "row-click",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "row",
                  "type": "object",
                  "description": "The row upon which user has clicked/tapped",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user clicks/taps on a row; Is not emitted when using body/row/item scoped slots",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "request",
              "arguments": [
                {
                  "name": "requestProp",
                  "type": "object",
                  "description": "Props of the request",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when a server request is triggered",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selection",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Selection details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when user selects/unselects row(s)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "update:pagination",
              "arguments": [
                {
                  "name": "newPagination",
                  "type": "object",
                  "description": "The updated pagination object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Used by Vue on 'pagination.sync' prop for updating its value",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "update:selected",
              "arguments": [
                {
                  "name": "newSelected",
                  "type": "any[]",
                  "description": "The updated selected array\n\nExamples:\n[ { name: 'Frozen Yogurt', calories: 159, fat: 6 } ]",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Used by Vue on 'selected.sync' prop for updating its value",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "virtual-scroll",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Object of properties on the new scroll position",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the virtual scroll occurs, if using virtual scroll",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "item",
              "vue-properties": [
                {
                  "name": "key",
                  "type": "any",
                  "description": "Row's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "row",
                  "type": "object",
                  "description": "Row object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "colsMap",
                  "type": "object",
                  "description": "Column mapping (key is column name, value is column object)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "selected",
                  "type": "boolean",
                  "description": "Is row selected? Can directly be assigned new Boolean value which changes selection state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "expand",
                  "type": "boolean",
                  "description": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "__trClass",
                  "type": "string",
                  "description": "Internal prop passed down to QTr (if used)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to use for defining an item when in 'grid' mode; Suggestion: QCard",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "body",
              "vue-properties": [
                {
                  "name": "key",
                  "type": "any",
                  "description": "Row's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "row",
                  "type": "object",
                  "description": "Row object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "colsMap",
                  "type": "object",
                  "description": "Column mapping (key is column name, value is column object)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "selected",
                  "type": "boolean",
                  "description": "Is row selected? Can directly be assigned new Boolean value which changes selection state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "expand",
                  "type": "boolean",
                  "description": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "__trClass",
                  "type": "string",
                  "description": "Internal prop passed down to QTr (if used)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how a body row looks like; Suggestion: QTr + Td",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "body-cell",
              "vue-properties": [
                {
                  "name": "row",
                  "type": "object",
                  "description": "Row object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "col",
                  "type": "object",
                  "description": "Column definition for column associated with table cell",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "value",
                  "type": "any",
                  "description": "Parsed/Formatted value of table cell",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how all body cells look like; Suggestion: QTd",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "body-cell-[name]",
              "vue-properties": [
                {
                  "name": "row",
                  "type": "object",
                  "description": "Row object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "col",
                  "type": "object",
                  "description": "Column definition for column associated with table cell",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "value",
                  "type": "any",
                  "description": "Parsed/Formatted value of table cell",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how a specific column cell looks like; replace '[name]' with column name (from columns definition object)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header",
              "vue-properties": [
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "colsMap",
                  "type": "object",
                  "description": "Column mapping (key is column name, value is column object)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "sort",
                  "type": "Function",
                  "description": "Trigger a table sort",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "header",
                  "type": "boolean",
                  "description": "Internal prop passed down to QTh (if used); Always 'true'",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how header looks like; Suggestion: QTr + QTh",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header-cell",
              "vue-properties": [
                {
                  "name": "col",
                  "type": "object",
                  "description": "Column definition associated to header cell",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "colsMap",
                  "type": "object",
                  "description": "Column mapping (key is column name, value is column object)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "sort",
                  "type": "Function",
                  "description": "Trigger a table sort",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how each header cell looks like; Suggestion: QTh",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header-cell-[name]",
              "vue-properties": [
                {
                  "name": "col",
                  "type": "object",
                  "description": "Column definition associated to header cell",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "colsMap",
                  "type": "object",
                  "description": "Column mapping (key is column name, value is column object)",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "sort",
                  "type": "Function",
                  "description": "Trigger a table sort",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how a specific header cell looks like; replace '[name]' with column name (from columns definition object)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top-row",
              "vue-properties": [
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how top extra row looks like",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom-row",
              "vue-properties": [
                {
                  "name": "cols",
                  "type": "object",
                  "description": "Column definitions",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how bottom extra row looks like",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "bottom",
              "vue-properties": [
                {
                  "name": "pagination",
                  "type": "object",
                  "description": "Pagination object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "pagesNumber",
                  "type": "number",
                  "description": "Number of pages available\n\nExamples:\n5",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isFirstPage",
                  "type": "boolean",
                  "description": "Are we on first page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isLastPage",
                  "type": "boolean",
                  "description": "Are we on last page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "prevPage",
                  "type": "Function",
                  "description": "Navigates to previous page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "nextPage",
                  "type": "Function",
                  "description": "Navigates to next page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "inFullscreen",
                  "type": "boolean",
                  "description": "Is table in fullscreen mode?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleFullscreen",
                  "type": "Function",
                  "description": "Toggles fullscreen mode",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how table bottom looks like",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "pagination",
              "vue-properties": [
                {
                  "name": "pagination",
                  "type": "object",
                  "description": "Pagination object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "pagesNumber",
                  "type": "number",
                  "description": "Number of pages available\n\nExamples:\n5",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isFirstPage",
                  "type": "boolean",
                  "description": "Are we on first page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isLastPage",
                  "type": "boolean",
                  "description": "Are we on last page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "prevPage",
                  "type": "Function",
                  "description": "Navigates to previous page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "nextPage",
                  "type": "Function",
                  "description": "Navigates to next page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "inFullscreen",
                  "type": "boolean",
                  "description": "Is table in fullscreen mode?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleFullscreen",
                  "type": "Function",
                  "description": "Toggles fullscreen mode",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to override default pagination label and buttons",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top-left",
              "vue-properties": [
                {
                  "name": "pagination",
                  "type": "object",
                  "description": "Pagination object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "pagesNumber",
                  "type": "number",
                  "description": "Number of pages available\n\nExamples:\n5",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isFirstPage",
                  "type": "boolean",
                  "description": "Are we on first page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isLastPage",
                  "type": "boolean",
                  "description": "Are we on last page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "prevPage",
                  "type": "Function",
                  "description": "Navigates to previous page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "nextPage",
                  "type": "Function",
                  "description": "Navigates to next page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "inFullscreen",
                  "type": "boolean",
                  "description": "Is table in fullscreen mode?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleFullscreen",
                  "type": "Function",
                  "description": "Toggles fullscreen mode",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how left part of the table top looks like",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top-right",
              "vue-properties": [
                {
                  "name": "pagination",
                  "type": "object",
                  "description": "Pagination object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "pagesNumber",
                  "type": "number",
                  "description": "Number of pages available\n\nExamples:\n5",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isFirstPage",
                  "type": "boolean",
                  "description": "Are we on first page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isLastPage",
                  "type": "boolean",
                  "description": "Are we on last page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "prevPage",
                  "type": "Function",
                  "description": "Navigates to previous page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "nextPage",
                  "type": "Function",
                  "description": "Navigates to next page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "inFullscreen",
                  "type": "boolean",
                  "description": "Is table in fullscreen mode?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleFullscreen",
                  "type": "Function",
                  "description": "Toggles fullscreen mode",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how right part of the table top looks like",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "top-selection",
              "vue-properties": [
                {
                  "name": "pagination",
                  "type": "object",
                  "description": "Pagination object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "pagesNumber",
                  "type": "number",
                  "description": "Number of pages available\n\nExamples:\n5",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isFirstPage",
                  "type": "boolean",
                  "description": "Are we on first page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "isLastPage",
                  "type": "boolean",
                  "description": "Are we on last page?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "prevPage",
                  "type": "Function",
                  "description": "Navigates to previous page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "nextPage",
                  "type": "Function",
                  "description": "Navigates to next page, if available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "inFullscreen",
                  "type": "boolean",
                  "description": "Is table in fullscreen mode?",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "toggleFullscreen",
                  "type": "Function",
                  "description": "Toggles fullscreen mode",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how top table section looks like when user has selected at least one row",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-data",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string",
                  "description": "The suggested message\n\nExamples:\nNo data available",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "icon",
                  "type": "string",
                  "description": "The suggested icon name (following Quasar convention)\n\nExamples:\nwarning",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to define how the bottom will look like when is nothing to display",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTable - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTd",
          "source": {
            "module": "quasar",
            "symbol": "QTd"
          },
          "attributes": [
            {
              "name": "props",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "QTable's column scoped slot property\n\nExamples:\n:props=\"props\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "auto-width",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Tries to shrink column width size; Useful for columns with a checkbox/radio/toggle",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTd - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTh",
          "source": {
            "module": "quasar",
            "symbol": "QTh"
          },
          "attributes": [
            {
              "name": "props",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "QTable's header column scoped slot property\n\nExamples:\n:props=\"props\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "auto-width",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Tries to shrink header column width size; Useful for columns with a checkbox/radio/toggle",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTh - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTr",
          "source": {
            "module": "quasar",
            "symbol": "QTr"
          },
          "attributes": [
            {
              "name": "props",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "QTable's row scoped slot property\n\nExamples:\n:props=\"props\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTr - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QRouteTab",
          "source": {
            "module": "quasar",
            "symbol": "QRouteTab"
          },
          "attributes": [
            {
              "name": "to",
              "value": {
                "kind": "expression",
                "type": "string|object"
              },
              "description": "Equivalent to Vue Router <router-link> 'to' property\n\nExamples:\n/home/dashboard\n:to=\"{ name: 'my-route-name' }\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "exact",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'exact' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "append",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'append' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "replace",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Equivalent to Vue Router <router-link> 'replace' property",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "exact-active-class",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Equivalent to Vue Router <router-link> 'active-class' property\n\nExamples:\nmy-exact-active-class",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "A number or string to label the tab\n\nExamples:\nHome",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "alert",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Adds an alert symbol to the tab, notifying the user there are some updates; If its value is not a Boolean, then you can specify a color\n\nExamples:\nalert\nalert=\"purple\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Panel name\n\nExamples:\nhome\n:name=\"1\"",
              "doc-url": "https://quasar.dev",
              "default": "\"A random UID\""
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Turns off capitalizing all letters within the tab (which is the default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QMenu, QTooltip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QRouteTab - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTab",
          "source": {
            "module": "quasar",
            "symbol": "QTab"
          },
          "attributes": [
            {
              "name": "ripple",
              "value": {
                "kind": "expression",
                "type": "boolean|object"
              },
              "description": "Configure material ripple (disable it by setting it to 'false' or supply a config object)\n\nExamples:\nfalse\n{ center: true, color: 'teal', keyCodes: [] }",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "A number or string to label the tab\n\nExamples:\nHome",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "alert",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Adds an alert symbol to the tab, notifying the user there are some updates; If its value is not a Boolean, then you can specify a color\n\nExamples:\nalert\nalert=\"purple\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "name",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Panel name\n\nExamples:\nhome\n:name=\"1\"",
              "doc-url": "https://quasar.dev",
              "default": "\"A random UID\""
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Turns off capitalizing all letters within the tab (which is the default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Suggestion: QMenu, QTooltip",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTab - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTabs",
          "source": {
            "module": "quasar",
            "symbol": "QTabs"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Model of the component defining current panel name; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"selectedTab\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "vertical",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Use vertical design (tabs one on top of each other rather than one next to the other horizontally)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "align",
              "value": {
                "kind": "expression",
                "type": "'left'|'center'|'right'|'justify'"
              },
              "description": "Horizontal alignment the tabs within the tabs container\n\nExamples:\nright",
              "doc-url": "https://quasar.dev",
              "default": "\"center\""
            },
            {
              "name": "breakpoint",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Breakpoint (in pixels) of tabs container width at which the tabs automatically turn to a justify alignment\n\nExamples:\n:breakpoint=\"500\"",
              "doc-url": "https://quasar.dev",
              "default": "600"
            },
            {
              "name": "active-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The color to be attributed to the text of the active tab\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "active-bg-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The color to be attributed to the background of the active tab\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "indicator-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The color to be attributed to the indicator (the underline) of the active tab\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The name of an icon to replace the default arrow used to scroll through the tabs to the left, when the tabs extend past the width of the tabs container\n\nExamples:\narrow_left",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The name of an icon to replace the default arrow used to scroll through the tabs to the right, when the tabs extend past the width of the tabs container\n\nExamples:\narrow_right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "stretch",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "When used on flexbox parent, tabs will stretch to parent's height",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "shrink",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "By default, QTabs is set to grow to the available space; However, you can reverse that with this prop; Useful (and required) when placing the component in a QToolbar",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "switch-indicator",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Switches the indicator position (on left of tab for vertical mode or above the tab for default horizontal mode)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "narrow-indicator",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the indicator to be the same width as the tab's content (text or icon), instead of the whole width of the tab",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "inline-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the text to be inline with the icon, should one be used",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "no-caps",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Turns off capitalizing all letters within the tab (which is the default)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTabs - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QTime",
          "source": {
            "module": "quasar",
            "symbol": "QTime"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Time of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nv-model=\"currentTime\"",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "landscape",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display the component in landscape mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "mask",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Mask (formatting string) used for parsing and formatting value\n\nExamples:\nHH:mm:ss\nYYYY-MM-DD HH:mm:ss\nHH:mm MMMM Do, YYYY",
              "doc-url": "https://quasar.dev",
              "default": "\"HH:mm\""
            },
            {
              "name": "locale",
              "value": {
                "kind": "expression",
                "type": "object"
              },
              "description": "Locale formatting options\n\nExamples:\n:locale=\"{ monthsShort: ['Ian', 'Feb', 'Mar', '...'] }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "calendar",
              "value": {
                "kind": "expression",
                "type": "'gregorian'|'persian'"
              },
              "description": "Specify calendar type",
              "doc-url": "https://quasar.dev",
              "default": "\"gregorian\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "format24h",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Forces 24 hour time display instead of AM/PM system",
              "doc-url": "https://quasar.dev",
              "default": "\"(based on Quasar lang language being used)\"",
              "type": "boolean"
            },
            {
              "name": "options",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Optionally configure what time is the user allowed to set; Overridden by 'hour-options', 'minute-options' and 'second-options' if those are set; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:options=\"(hr, min, sec) => hr <= 6\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hour-options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Optionally configure what hours is the user allowed to set; Overrides 'options' prop if that is also set\n\nExamples:\n:hour-options=\"[3, 6, 9]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "minute-options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Optionally configure what minutes is the user allowed to set; Overrides 'options' prop if that is also set\n\nExamples:\n:minute-options=\"[0, 15, 30, 45]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "second-options",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Optionally configure what seconds is the user allowed to set; Overrides 'options' prop if that is also set\n\nExamples:\n:second-options=\"[0, 7, 10, 23]\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "with-seconds",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow the time to be set with seconds",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "now-btn",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Display a button that selects the current time",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "string",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "details",
                  "type": "object",
                  "description": "Object of properties on the new model",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "This is where additional buttons can go",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTime - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QTimeline",
          "source": {
            "module": "quasar",
            "symbol": "QTimeline"
          },
          "attributes": [
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "side",
              "value": {
                "kind": "expression",
                "type": "'left'|'right'"
              },
              "description": "Side to place the timeline entries in dense and comfortable layout; For loose layout it gets overridden by QTimelineEntry side prop",
              "doc-url": "https://quasar.dev",
              "default": "\"right\""
            },
            {
              "name": "layout",
              "value": {
                "kind": "expression",
                "type": "'dense'|'comfortable'|'loose'"
              },
              "description": "Layout of the timeline. Dense keeps content and labels on one side. Comfortable keeps content on one side and labels on the opposite side. Loose puts content on both sides.",
              "doc-url": "https://quasar.dev",
              "default": "\"dense\""
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Used for content of component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTimeline - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTimelineEntry",
          "source": {
            "module": "quasar",
            "symbol": "QTimelineEntry"
          },
          "attributes": [
            {
              "name": "heading",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Defines a heading timeline item",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tag",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Tag to use, if of type 'heading' only\n\nExamples:\nh1",
              "doc-url": "https://quasar.dev",
              "default": "\"h3\""
            },
            {
              "name": "side",
              "value": {
                "kind": "expression",
                "type": "'left'|'right'"
              },
              "description": "Side to place the timeline entry; Works only if QTimeline layout is loose.",
              "doc-url": "https://quasar.dev",
              "default": "\"right\""
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "avatar",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "URL to the avatar image; Icon takes precedence if used, so it replaces avatar; Suggestion: use a static resource\n\nExamples:\nstatics/boy-avatar.png\nstatics/linux-avatar.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "title",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Title of timeline entry; Is overridden if using 'title' slot\n\nExamples:\nDecember party",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "subtitle",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Subtitle of timeline entry; Is overridden if using 'subtitle' slot\n\nExamples:\nAll invited",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "body",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Body content of timeline entry; Use this prop or the default slot\n\nExamples:\nLorem ipsum dolor sit amet, consectetur adipisicing elit.",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Timeline entry content (body)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "title",
              "description": "Optional slot for title; When used, it overrides 'title' prop",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "subtitle",
              "description": "Optional slot for subtitle; When used, it overrides 'subtitle' prop",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTimelineEntry - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QToggle",
          "source": {
            "module": "quasar",
            "symbol": "QToggle"
          },
          "attributes": [
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "any|any[]"
              },
              "description": "Model of the component; Either use this property (along with a listener for 'input' event) OR use v-model directive\n\nExamples:\nfalse\n['car', 'building']",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "val",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Works when model ('value') is Array. It tells the component which value should add/remove when ticked/unticked\n\nExamples:\ncar",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "true-value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "What model value should be considered as checked/ticked/on?\n\nExamples:\nAgreed",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "false-value",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "What model value should be considered as unchecked/unticked/off?\n\nExamples:\nDisagree",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Label to display along the component (or use the default slot instead of this prop)\n\nExamples:\nI agree with the Terms and Conditions",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left-label",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Label (if any specified) should be displayed on the left side of the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keep-color",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Should the color (if specified any) be kept when the component is unticked/ off?",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "dense",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Dense mode; occupies less space",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "tabindex",
              "value": {
                "kind": "expression",
                "type": "number|string"
              },
              "description": "Tabindex HTML attribute value\n\nExamples:\n0\n100",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "checked-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The icon to be used when the toggle is on\n\nExamples:\nvisibility",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "unchecked-icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The icon to be used when the toggle is off\n\nExamples:\nvisibility_off",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "any",
                  "description": "New model value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the component needs to change the model; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot can be used as label, unless 'label' prop is specified; Suggestion: string",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QToggle - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QToolbar",
          "source": {
            "module": "quasar",
            "symbol": "QToolbar"
          },
          "attributes": [
            {
              "name": "inset",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Apply an inset to content (useful for subsequent toolbars)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QToolbar - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QToolbarTitle",
          "source": {
            "module": "quasar",
            "symbol": "QToolbarTitle"
          },
          "attributes": [
            {
              "name": "shrink",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "By default, QToolbarTitle is set to grow to the available space. However, you can reverse that with this prop",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QToolbarTitle - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QTooltip",
          "source": {
            "module": "quasar",
            "symbol": "QTooltip"
          },
          "attributes": [
            {
              "name": "content-class",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Class definitions to be attributed to the content\n\nExamples:\nmy-special-class\n:content-class=\"{ 'my-special-class': <condition> }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "content-style",
              "value": {
                "kind": "expression",
                "type": "any[]|string|object"
              },
              "description": "Style definitions to be attributed to the content\n\nExamples:\nbackground-color: #ff0000\n:content-style=\"{ color: '#ff0000' }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "value",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'input' event) OR use v-model directive",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "max-height",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum height of the Tooltip; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-width",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The maximum width of the Tooltip; Size in CSS units, including unit name\n\nExamples:\n16px\n2rem",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "transition-show",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"jump-down\""
            },
            {
              "name": "transition-hide",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "One of Quasar's embedded transitions\n\nExamples:\nfade\nslide-down",
              "doc-url": "https://quasar.dev",
              "default": "\"jump-up\""
            },
            {
              "name": "anchor",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the starting position or anchor point of the Tooltip relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "self",
              "value": {
                "kind": "expression",
                "type": "'top left'|'top middle'|'top right'|'center left'|'center middle'|'center right'|'bottom left'|'bottom middle'|'bottom right'"
              },
              "description": "Two values setting the Tooltip's own position relative to its target\n\nExamples:\ntop left\nbottom right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "offset",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels\n\nExamples:\n[8, 8]\n[5, 10]",
              "doc-url": "https://quasar.dev",
              "default": "\"[14, 14]\""
            },
            {
              "name": "target",
              "value": {
                "kind": "expression",
                "type": "boolean|string"
              },
              "description": "Configure a target element to trigger Tooltip toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) it attaches the events to the specified DOM element (if it exists)\n\nExamples:\n:target=\"false\"\ntarget=\".my-parent\"",
              "doc-url": "https://quasar.dev",
              "default": "true"
            },
            {
              "name": "no-parent-event",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "delay",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Configure Tooltip to appear with delay\n\nExamples:\n:delay=\"550\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "input",
              "arguments": [
                {
                  "name": "value",
                  "type": "boolean",
                  "description": "New state (showing/hidden)",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when showing/hidden state changes; Is also used by v-model",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered show()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-show",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers show() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted after component has triggered hide()",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "before-hide",
              "arguments": [
                {
                  "name": "evt",
                  "type": "object",
                  "description": "JS event object",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when component triggers hide() but before it finishes doing it",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Default slot in the devland unslotted content of the component",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTooltip - Quasar component",
          "doc-url": "https://quasar.dev",
          "vue-model": {
            "prop": "value",
            "event": "input"
          }
        },
        {
          "name": "QTree",
          "source": {
            "module": "quasar",
            "symbol": "QTree"
          },
          "attributes": [
            {
              "name": "nodes",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "The array of nodes that designates the tree structure\n\nExamples:\n[ {...}, {...} ]",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "node-key",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The property name of each node object that holds a unique node id\n\nExamples:\nkey\nid",
              "doc-url": "https://quasar.dev",
              "required": true
            },
            {
              "name": "label-key",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The property name of each node object that holds the label of the node\n\nExamples:\nname\ndescription",
              "doc-url": "https://quasar.dev",
              "default": "\"label\""
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "control-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for controls (like checkboxes) from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selected-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for selected nodes (from the Quasar Color Palette)\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "icon",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix\n\nExamples:\nmap\nion-add\nimg:https://cdn.quasar.dev/logo/svg/quasar-logo.svg\nimg:statics/path/to/some_image.png",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tick-strategy",
              "value": {
                "kind": "expression",
                "type": "'none'|'strict'|'leaf'|'leaf-filtered'"
              },
              "description": "The type of strategy to use for the selection of the nodes",
              "doc-url": "https://quasar.dev",
              "default": "\"none\""
            },
            {
              "name": "ticked",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Keys of nodes that are ticked\n\nExamples:\n:ticked.sync=\"tickedKeys\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "expanded",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Keys of nodes that are expanded\n\nExamples:\n:expanded.sync=\"expandedKeys\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "selected",
              "value": {
                "kind": "expression",
                "type": "any"
              },
              "description": "Key of node currently selected\n\nExamples:\n:selected.sync=\"selectedKey\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default-expand-all",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow the tree to have all its branches expanded, when first rendered",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "accordion",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allows the tree to be set in accordion mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "filter",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The text value to be used for filtering nodes\n\nExamples:\n:filter=\"searchText\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter-method",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "The function to use to filter the tree nodes; For best performance, reference it from your scope and do not define it inline",
              "doc-url": "https://quasar.dev",
              "default": "\"(see source code)\""
            },
            {
              "name": "duration",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Toggle animation duration (in milliseconds)\n\nExamples:\n:duration=\"500\"",
              "doc-url": "https://quasar.dev",
              "default": "300"
            },
            {
              "name": "no-nodes-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override default such label for when no nodes are available\n\nExamples:\nNo nodes to show!",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-results-label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Override default such label for when no nodes are available due to filtering\n\nExamples:\nNo results",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "update:expanded",
              "arguments": [
                {
                  "name": "expanded",
                  "type": "any[]",
                  "description": "The expanded node keys\n\nExamples:\n[ 'Node 1', 'Node 2' ]",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Triggered when nodes are expanded or collapsed; Used by Vue on 'update' synched prop",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "lazy-load",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Lazy loading details",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the lazy loading of nodes is finished",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "update:ticked",
              "arguments": [
                {
                  "name": "target",
                  "type": "any[]",
                  "description": "The ticked node keys\n\nExamples:\n[ 'Node 1', 'Node 2' ]",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when nodes are ticked/unticked via the checkbox; Used by Vue on 'ticked' synched prop",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "update:selected",
              "arguments": [
                {
                  "name": "target",
                  "type": "any",
                  "description": "The selected node key\n\nExamples:\nNode 1",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when selected node changes; Used by Vue on 'selected' synched prop",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "default-header",
              "vue-properties": [
                {
                  "name": "expanded",
                  "type": "boolean",
                  "description": "Is node expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "ticked",
                  "type": "boolean",
                  "description": "Is node ticked? Can directly be assigned new Boolean value which changes ticked state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "tree",
                  "type": "object",
                  "description": "QTree instance",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "node",
                  "type": "object",
                  "description": "Node object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "key",
                  "type": "any",
                  "description": "Node's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "color",
                  "type": "string",
                  "description": "QTree instance 'color' supplied prop value\n\nExamples:\nprimary",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "dark",
                  "type": "boolean",
                  "description": "QTree instance 'dark' supplied prop value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to use for defining the header of a node",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "header-[name]",
              "vue-properties": [
                {
                  "name": "expanded",
                  "type": "boolean",
                  "description": "Is node expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "ticked",
                  "type": "boolean",
                  "description": "Is node ticked? Can directly be assigned new Boolean value which changes ticked state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "tree",
                  "type": "object",
                  "description": "QTree instance",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "node",
                  "type": "object",
                  "description": "Node object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "key",
                  "type": "any",
                  "description": "Node's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "color",
                  "type": "string",
                  "description": "QTree instance 'color' supplied prop value\n\nExamples:\nprimary",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "dark",
                  "type": "boolean",
                  "description": "QTree instance 'dark' supplied prop value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Header template slot for describing node header; Used by nodes which have their 'header' prop set to '[name]', where '[name]' can be any string",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default-body",
              "vue-properties": [
                {
                  "name": "expanded",
                  "type": "boolean",
                  "description": "Is node expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "ticked",
                  "type": "boolean",
                  "description": "Is node ticked? Can directly be assigned new Boolean value which changes ticked state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "tree",
                  "type": "object",
                  "description": "QTree instance",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "node",
                  "type": "object",
                  "description": "Node object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "key",
                  "type": "any",
                  "description": "Node's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "color",
                  "type": "string",
                  "description": "QTree instance 'color' supplied prop value\n\nExamples:\nprimary",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "dark",
                  "type": "boolean",
                  "description": "QTree instance 'dark' supplied prop value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Slot to use for defining the body of a node",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "body-[name]",
              "vue-properties": [
                {
                  "name": "expanded",
                  "type": "boolean",
                  "description": "Is node expanded? Can directly be assigned new Boolean value which changes expanded state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "ticked",
                  "type": "boolean",
                  "description": "Is node ticked? Can directly be assigned new Boolean value which changes ticked state",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "tree",
                  "type": "object",
                  "description": "QTree instance",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "node",
                  "type": "object",
                  "description": "Node object",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "key",
                  "type": "any",
                  "description": "Node's key",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "color",
                  "type": "string",
                  "description": "QTree instance 'color' supplied prop value\n\nExamples:\nprimary",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "dark",
                  "type": "boolean",
                  "description": "QTree instance 'dark' supplied prop value",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Body template slot for describing node body; Used by nodes which have their 'body' prop set to '[name]', where '[name]' can be any string",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QTree - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QUploader",
          "source": {
            "module": "quasar",
            "symbol": "QUploader"
          },
          "attributes": [
            {
              "name": "label",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Label for the uploader\n\nExamples:\nUpload photo here",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Color name for component from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "text-color",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Overrides text color (if needed); color name from the Quasar Color Palette\n\nExamples:\nprimary\nteal-10",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "dark",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Notify the component that the background is a dark color",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "square",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Removes border-radius so borders are squared",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "flat",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a 'flat' design (no default shadow)",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "bordered",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Applies a default border to the component",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "multiple",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Allow multiple file uploads",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "accept",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "Comma separated list of unique file type specifiers. Maps to 'accept' attribute of native input type=file element\n\nExamples:\n.jpg, .pdf, image/*\nimage/jpeg, .pdf",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-file-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum size of individual file in bytes\n\nExamples:\n1024\n1048576",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "max-total-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Maximum size of all files combined in bytes\n\nExamples:\n1024\n1048576",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "filter",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Custom filter for added files; Only files that pass this filter will be added to the queue and uploaded; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:filter=\"files => files.filter(file => file.size === 1024)\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "no-thumbnails",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Don't display thumbnails for image files",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "auto-upload",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Upload files immediately when added",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "hide-upload-btn",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Don't show the upload button",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "disable",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in disabled mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "readonly",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Put component in readonly mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "factory",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Function which should return an Object or a Promise resolving with an Object; For best performance, reference it from your scope and do not define it inline",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "url",
              "value": {
                "kind": "expression",
                "type": "string|Function"
              },
              "description": "URL or path to the server which handles the upload. Takes String or factory function, which returns String. Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nhttps://example.com/path\nfiles => `https://example.com?count=${files.length}`",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "method",
              "value": {
                "kind": "expression",
                "type": "string|Function"
              },
              "description": "HTTP method to use for upload; Takes String or factory function which returns a String; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nPOST\n:method=\"files => files.length > 10 ? 'POST' : 'PUT'\"",
              "doc-url": "https://quasar.dev",
              "default": "\"POST\""
            },
            {
              "name": "field-name",
              "value": {
                "kind": "expression",
                "type": "string|Function"
              },
              "description": "Field name for each file upload; This goes into the following header: 'Content-Disposition: form-data; name=\"__HERE__\"; filename=\"somefile.png\"; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nbackgroundFile\n:field-name=\"(file) => 'background' + file.name\"",
              "doc-url": "https://quasar.dev",
              "default": "\"(file) => file.name\""
            },
            {
              "name": "headers",
              "value": {
                "kind": "expression",
                "type": "any[]|Function"
              },
              "description": "Array or a factory function which returns an array; Array consists of objects with header definitions; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\n[{name: 'Content-Type', value: 'application/json'}, {name: 'Accept', value: 'application/json'}]\n() => [{name: 'X-Custom-Timestamp', value: Date.now()}]\nfiles => [{name: 'X-Custom-Count', value: files.length}]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "form-fields",
              "value": {
                "kind": "expression",
                "type": "any[]|Function"
              },
              "description": "Array or a factory function which returns an array; Array consists of objects with additional fields definitions (used by Form to be uploaded); Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\n[{name: 'my-field', value: 'my-value'}]\n() => [{name: 'my-field', value: 'my-value'}]\nfiles => [{name: 'my-field', value: 'my-value' + files.length}]",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "with-credentials",
              "value": {
                "kind": "expression",
                "type": "boolean|Function"
              },
              "description": "Sets withCredentials to true on the XHR that manages the upload; Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nwith-credentials\n:with-credentials=\"files => ...\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "send-raw",
              "value": {
                "kind": "expression",
                "type": "boolean|Function"
              },
              "description": "Send raw files without wrapping into a Form(); Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nsend-raw\n:send-raw=\"files => ...\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "batch",
              "value": {
                "kind": "expression",
                "type": "boolean|Function"
              },
              "description": "Upload files in batch (in one XHR request); Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline\n\nExamples:\nfiles => files.length > 10",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "added",
              "arguments": [
                {
                  "name": "files",
                  "type": "any[]",
                  "description": "Array of files that were added",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when files are added into the list",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "removed",
              "arguments": [
                {
                  "name": "files",
                  "type": "any[]",
                  "description": "Array of files that were removed",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when files are removed from the list",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "start",
              "description": "Started working",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "finish",
              "description": "Finished working (regardless of success or fail)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "uploaded",
              "arguments": [
                {
                  "name": "info",
                  "type": "object",
                  "description": "Object containing information about the event",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when file or batch of files is uploaded",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "failed",
              "arguments": [
                {
                  "name": "info",
                  "type": "object",
                  "description": "Object containing information about the event",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when file or batch of files has encountered error while uploading",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "uploading",
              "arguments": [
                {
                  "name": "info",
                  "type": "object",
                  "description": "Object containing information about the event",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when file or batch of files started uploading",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "factory-failed",
              "arguments": [
                {
                  "name": "err",
                  "type": "object",
                  "description": "Error Object which is the Promise rejection reason",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "files",
                  "type": "any[]",
                  "description": "Files which were to get uploaded",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when factory function is supplied with a Promise which is rejected",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "header",
              "description": "Slot for custom header; Scope is the QUploader instance itself",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "list",
              "description": "Slot for custom list; Scope is the QUploader instance itself",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QUploader - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QUploaderAddTrigger",
          "source": {
            "module": "quasar",
            "symbol": "QUploaderAddTrigger"
          },
          "slots": [],
          "description": "QUploaderAddTrigger - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QVideo",
          "source": {
            "module": "quasar",
            "symbol": "QVideo"
          },
          "attributes": [
            {
              "name": "src",
              "value": {
                "kind": "expression",
                "type": "string"
              },
              "description": "The source url to display in an iframe\n\nExamples:\nhttps://www.youtube.com/embed/k3_tw44QsZQ",
              "doc-url": "https://quasar.dev",
              "required": true
            }
          ],
          "slots": [],
          "description": "QVideo - Quasar component",
          "doc-url": "https://quasar.dev"
        },
        {
          "name": "QVirtualScroll",
          "source": {
            "module": "quasar",
            "symbol": "QVirtualScroll"
          },
          "attributes": [
            {
              "name": "virtual-scroll-horizontal",
              "value": {
                "kind": "expression",
                "type": "boolean"
              },
              "description": "Make virtual list work in horizontal mode",
              "doc-url": "https://quasar.dev",
              "type": "boolean"
            },
            {
              "name": "virtual-scroll-slice-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Number of options to render in the virtual list\n\nExamples:\n:virtual-scroll-slice-size=\"60\"",
              "doc-url": "https://quasar.dev",
              "default": "\"30\""
            },
            {
              "name": "virtual-scroll-item-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Default size in pixels (height if vertical, width if horizontal) of an option; This value is used for rendering the initial list; Try to use a value close to the minimum size of an item\n\nExamples:\n:virtual-scroll-item-size=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"24\""
            },
            {
              "name": "virtual-scroll-sticky-size-start",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the start of the list; A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-start=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "virtual-scroll-sticky-size-end",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the end of the list; A correct value will improve scroll precision\n\nExamples:\n:virtual-scroll-sticky-size-end=\"48\"",
              "doc-url": "https://quasar.dev",
              "default": "\"0\""
            },
            {
              "name": "type",
              "value": {
                "kind": "expression",
                "type": "'list'|'table'"
              },
              "description": "The type of content: list (default) or table",
              "doc-url": "https://quasar.dev",
              "default": "\"list\""
            },
            {
              "name": "items",
              "value": {
                "kind": "expression",
                "type": "any[]"
              },
              "description": "Available list items that will be passed to the scoped slot; For best performance freeze the list of items; Required if 'itemsFn' is not supplied\n\nExamples:\n:items=\"[ 'BMW', 'Samsung Phone' ]\"\n:items=\"[ { label: 'BMW', value: 'car' }, { label: 'Samsung Phone', value: 'phone' } ]\"",
              "doc-url": "https://quasar.dev",
              "default": "\"[]\""
            },
            {
              "name": "items-size",
              "value": {
                "kind": "expression",
                "type": "number"
              },
              "description": "Number of available items in the list; Required and used only if 'itemsFn' is provided\n\nExamples:\n:items-size=\"100000\"\n:items-size=\"500\"",
              "doc-url": "https://quasar.dev",
              "default": "\"void 0\""
            },
            {
              "name": "items-fn",
              "value": {
                "kind": "expression",
                "type": "Function"
              },
              "description": "Function to return the scope for the items to be displayed; Should return an array for items starting from 'from' index for size length; For best performance, reference it from your scope and do not define it inline\n\nExamples:\n:items-fn=\"(from, size) => { const items = []; for (let i = 0; i < size; i++) { items.push('Item ' + i) }; return items }\"",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "scroll-target",
              "value": {
                "kind": "expression",
                "type": "Element|string"
              },
              "description": "CSS selector or DOM element to be used as scroll container instead of the component's own container\n\nExamples:\n:scroll-target=\"$refs.scrollTarget\"\nscroll-target=\"body\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "events": [
            {
              "name": "virtual-scroll",
              "arguments": [
                {
                  "name": "details",
                  "type": "object",
                  "description": "Object of properties on the new scroll position",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Emitted when the virtual scroll occurs",
              "doc-url": "https://quasar.dev"
            }
          ],
          "slots": [
            {
              "name": "before",
              "description": "Template slot for the elements that should be rendered before the list; Suggestion: thead before a table",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "after",
              "description": "Template slot for the elements that should be rendered after the list; Suggestion: tfoot after a table",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "default",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number",
                  "description": "Item index in the options list\n\nExamples:\n0",
                  "doc-url": "https://quasar.dev"
                },
                {
                  "name": "item",
                  "type": "any",
                  "description": "Item data -- its value is taken from 'options' prop",
                  "doc-url": "https://quasar.dev"
                }
              ],
              "description": "Template slot for defining the list item; Suggestion: QItem",
              "doc-url": "https://quasar.dev"
            }
          ],
          "description": "QVirtualScroll - Quasar component",
          "doc-url": "https://quasar.dev"
        }
      ],
      "attributes": [
        {
          "name": "v-close-popup",
          "source": {
            "module": "quasar",
            "symbol": "ClosePopup"
          },
          "required": false,
          "description": "ClosePopup - Quasar directive",
          "doc-url": "https://quasar.dev",
          "value": {
            "kind": "expression",
            "type": "boolean|number|string"
          }
        },
        {
          "name": "v-go-back",
          "source": {
            "module": "quasar",
            "symbol": "GoBack"
          },
          "required": false,
          "description": "GoBack - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "single",
              "description": "Go back to previous route instead of the whole way to before directive was initialized\n\nExamples:\nv-go-back.single",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "string|object"
          }
        },
        {
          "name": "v-intersection",
          "source": {
            "module": "quasar",
            "symbol": "Intersection"
          },
          "required": false,
          "description": "Intersection - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "once",
              "description": "Call handler only once, when the conditions are first met\n\nExamples:\nv-intersection.once",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "object|Function"
          }
        },
        {
          "name": "v-mutation",
          "source": {
            "module": "quasar",
            "symbol": "Mutation"
          },
          "required": false,
          "description": "Mutation - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "once",
              "description": "Call handler only once, when the first mutation was triggered, then stop monitoring\n\nExamples:\nv-mutation.once",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "childList",
              "description": "Monitor the target node (and, if 'subtree' is also set, its descendants) for the addition of new child nodes or removal of existing child nodes\n\nExamples:\nv-mutation.childList",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "subtree",
              "description": "Extend monitoring to the entire subtree of nodes rooted at target\n\nExamples:\nv-mutation.subtree",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "attributes",
              "description": "Watch for changes to the value of attributes on the node or nodes being monitored\n\nExamples:\nv-mutation.attributes",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "characterData",
              "description": "Monitor the specified target node or subtree for changes to the character data contained within the node or nodes\n\nExamples:\nv-mutation.characterData",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "attributeOldValue",
              "description": "Record the previous value of any attribute that changes when monitoring the node or nodes for attribute changes\n\nExamples:\nv-mutation.attributeOldValue",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "characterDataOldValue",
              "description": "Record the previous value of a node's text whenever the text changes on nodes being monitored\n\nExamples:\nv-mutation.characterDataOldValue",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-ripple",
          "source": {
            "module": "quasar",
            "symbol": "Ripple"
          },
          "required": false,
          "description": "Ripple - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "stop",
              "description": "Stop click/touch event propagation\n\nExamples:\nv-ripple.stop",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "center",
              "description": "Ripple starts from the absolute center\n\nExamples:\nv-ripple.center",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "boolean|object"
          }
        },
        {
          "name": "v-scroll",
          "source": {
            "module": "quasar",
            "symbol": "Scroll"
          },
          "required": false,
          "description": "Scroll - Quasar directive",
          "doc-url": "https://quasar.dev",
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-scroll-fire",
          "source": {
            "module": "quasar",
            "symbol": "ScrollFire"
          },
          "required": false,
          "description": "ScrollFire - Quasar directive",
          "doc-url": "https://quasar.dev",
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-touch-hold",
          "source": {
            "module": "quasar",
            "symbol": "TouchHold"
          },
          "required": false,
          "description": "TouchHold - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "capture",
              "description": "Use capture for touchstart event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouse",
              "description": "Listen for mouse events too",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseCapture",
              "description": "Use capture for mousedown event",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-touch-pan",
          "source": {
            "module": "quasar",
            "symbol": "TouchPan"
          },
          "required": false,
          "description": "TouchPan - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "stop",
              "description": "Stop event propagation for touch events",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "prevent",
              "description": "Calls event.preventDefault() for touch events",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mightPrevent",
              "description": "Required when you might call event.preventDefault() in your handler for touch events",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "capture",
              "description": "Use capture for touchstart event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouse",
              "description": "Listen for mouse events too",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseCapture",
              "description": "Use capture for mousedown event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseAllDir",
              "description": "Ignore initial mouse move direction (do not abort if the first mouse move is in an unaccepted direction)",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "horizontal",
              "description": "Catch horizontal (left/right) movement",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "vertical",
              "description": "Catch vertical (up/down) movement",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "up",
              "description": "Catch panning to up",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right",
              "description": "Catch panning to right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "down",
              "description": "Catch panning to down",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left",
              "description": "Catch panning to left",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-touch-repeat",
          "source": {
            "module": "quasar",
            "symbol": "TouchRepeat"
          },
          "required": false,
          "description": "TouchRepeat - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "capture",
              "description": "Use capture for touchstart event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouse",
              "description": "Listen for mouse events too",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseCapture",
              "description": "Use capture for mousedown event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "keyCapture",
              "description": "Use capture for keydown event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "esc",
              "description": "Catch ESC key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "tab",
              "description": "Catch TAB key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "enter",
              "description": "Catch ENTER key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "space",
              "description": "Catch SPACE key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "up",
              "description": "Catch UP arrow key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left",
              "description": "Catch LEFT arrow key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right",
              "description": "Catch RIGHT arrow key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "down",
              "description": "Catch DOWN key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "delete",
              "description": "Catch DELETE key",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "[keycode]",
              "description": "Key code to catch\n\nExamples:\nv-touch-repeat.68=\"fnToCall\"",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        },
        {
          "name": "v-touch-swipe",
          "source": {
            "module": "quasar",
            "symbol": "TouchSwipe"
          },
          "required": false,
          "description": "TouchSwipe - Quasar directive",
          "doc-url": "https://quasar.dev",
          "vue-modifiers": [
            {
              "name": "capture",
              "description": "Use capture for touchstart event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouse",
              "description": "Listen for mouse events too",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "mouseCapture",
              "description": "Use capture for mousedown event",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "horizontal",
              "description": "Catch horizontal (left/right) movement",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "vertical",
              "description": "Catch vertical (up/down) movement",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "up",
              "description": "Catch swipe to up",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "right",
              "description": "Catch swipe to right",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "down",
              "description": "Catch swipe to down",
              "doc-url": "https://quasar.dev"
            },
            {
              "name": "left",
              "description": "Catch swipe to left",
              "doc-url": "https://quasar.dev"
            }
          ],
          "value": {
            "kind": "expression",
            "type": "Function"
          }
        }
      ]
    }
  }
}